<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.3.2" created="2020-01-03 23:42" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>西西里</title>
	<link>http://192.168.1.114/WordPress</link>
	<description>Hello, How are you?</description>
	<pubDate>Fri, 03 Jan 2020 23:42:32 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://192.168.1.114/WordPress</wp:base_site_url>
	<wp:base_blog_url>http://192.168.1.114/WordPress</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[wwq]]></wp:author_login><wp:author_email><![CDATA[wwq100@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[wwq]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

		<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[未分类]]></wp:cat_name>
	</wp:category>
				<wp:term>
		<wp:term_id><![CDATA[1]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[uncategorized]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[未分类]]></wp:term_name>
	</wp:term>
		
	<generator>https://wordpress.org/?v=5.3.2</generator>

		<item>
		<title>CSDN上的博客</title>
		<link>http://192.168.1.114/WordPress/csdn%e4%b8%8a%e7%9a%84%e5%8d%9a%e5%ae%a2/</link>
		<pubDate>Sun, 17 May 2015 05:11:19 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?page_id=32</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.csdn.net/wwq100?viewmode=contents">http://blog.csdn.net/wwq100?viewmode=contents</a>

没有搞清楚，怎么把它搞过来。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date><![CDATA[2015-05-17 13:11:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-17 05:11:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[csdn%e4%b8%8a%e7%9a%84%e5%8d%9a%e5%ae%a2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>读书笔记：IOS视图控制器与控件</title>
		<link>http://192.168.1.114/WordPress/2015/05/19/%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0%ef%bc%9aios%e8%a7%86%e5%9b%be%e6%8e%a7%e5%88%b6%e5%99%a8%e4%b8%8e%e6%8e%a7%e4%bb%b6/</link>
		<pubDate>Mon, 18 May 2015 21:55:16 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[# IOS 视图控制器

## 视图控制器之间的切换

在响应的位置，创建需要的视图控制器，然后preset过去。

## 视图控制器之间传递数据

1. 通知中心

最简单的方式，缺点就是两个类之前没有关系。

1. 代理模式

采用协议的方式，需要向外传数据的类定义代理，接受数据的类实现协议。协议赋值采用 assign。


# IOS 控件

* UILabel
* UIControl

处理事件

* UIButton

处理状态
工厂方法：buttonWithType
贴图的方法，要使用custorm Type

cancel 事件，来电话和锁屏触发


* 风火轮（UIActivityIndicatorView）

显示与停止，显示到状态栏。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date><![CDATA[2015-05-19 05:55:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-18 21:55:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0%ef%bc%9aios%e8%a7%86%e5%9b%be%e6%8e%a7%e5%88%b6%e5%99%a8%e4%b8%8e%e6%8e%a7%e4%bb%b6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>xelatex 纸张大小设置</title>
		<link>http://192.168.1.114/WordPress/2015/05/19/xelatex-%e7%ba%b8%e5%bc%a0%e5%a4%a7%e5%b0%8f%e8%ae%be%e7%bd%ae/</link>
		<pubDate>Mon, 18 May 2015 22:06:28 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[\documentclass[]{article}

\usepackage[T1]{fontenc}

\usepackage{lmodern}

\usepackage{amssymb,amsmath}

\usepackage{ifxetex,ifluatex}

<strong>\usepackage[body={18cm,24cm}]{geometry}</strong>

<strong>\geometry{papersize={21cm,29.7cm}}</strong>

\usepackage{fixltx2e} % provides \textsubscript

% use microtype if available

\IfFileExists{microtype.sty}{\usepackage{microtype}}{}

% use upquote if available, for straight quotes in verbatim environments

注意加粗的两行。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date><![CDATA[2015-05-19 06:06:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-18 22:06:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xelatex-%e7%ba%b8%e5%bc%a0%e5%a4%a7%e5%b0%8f%e8%ae%be%e7%bd%ae]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>xeletax 中文不换行的解决方案</title>
		<link>http://192.168.1.114/WordPress/2015/05/19/xeletax-%e4%b8%ad%e6%96%87%e4%b8%8d%e6%8d%a2%e8%a1%8c%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88/</link>
		<pubDate>Mon, 18 May 2015 22:08:02 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[下面的方案是可行的：
<pre><code>\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt</code></pre>
整个文件：<!--more-->


<pre><code>\documentclass[$if(fontsize)$$fontsize$,$endif$$if(lang)$$lang$,$endif$$if(papersize)$$papersize$,$endif$]{$documentclass$}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{amssymb,amsmath}
\usepackage{ifxetex,ifluatex}
\usepackage{fixltx2e} % provides \textsubscript
% use microtype if available
\IfFileExists{microtype.sty}{\usepackage{microtype}}{}
% use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[utf8]{inputenc}
$if(euro)$
  \usepackage{eurosym}
$endif$
\else % if luatex or xelatex
  \usepackage{fontspec}
  \ifxetex
    \usepackage{xltxtra,xunicode}
  \fi
  \defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}
  \newcommand{\euro}{€}
$if(mainfont)$
    \setmainfont{$mainfont$}
$endif$
$if(sansfont)$
    \setsansfont{$sansfont$}
$endif$
$if(monofont)$
    \setmonofont{$monofont$}
$endif$
$if(mathfont)$
    \setmathfont{$mathfont$}
$endif$
\fi
$if(geometry)$
\usepackage[$for(geometry)$$geometry$$sep$,$endfor$]{geometry}
$endif$
$if(natbib)$
\usepackage{natbib}
\bibliographystyle{plainnat}
$endif$
$if(biblatex)$
\usepackage{biblatex}
$if(biblio-files)$
\bibliography{$biblio-files$}
$endif$
$endif$
$if(listings)$
\usepackage{listings}
$endif$
$if(lhs)$
\lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small\ttfamily}}{}
$endif$
$if(highlighting-macros)$
$highlighting-macros$
$endif$
$if(verbatim-in-note)$
\usepackage{fancyvrb}
$endif$
$if(tables)$
\usepackage{longtable}
$endif$
$if(graphics)$
\usepackage{graphicx}
% We will generate all images so they have a width \maxwidth. This means
% that they will get their normal width if they fit onto the page, but
% are scaled down if they would overflow the margins.
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width&gt;\linewidth\linewidth
\else\Gin@nat@width\fi}
\makeatother
\let\Oldincludegraphics\includegraphics
\renewcommand{\includegraphics}[1]{\Oldincludegraphics[width=\maxwidth]{#1}}
$endif$
\ifxetex
  \usepackage[setpagesize=false, % page size defined by xetex
              unicode=false, % unicode breaks when used with xetex
              xetex]{hyperref}
\else
  \usepackage[unicode=true]{hyperref}
\fi
\hypersetup{breaklinks=true,
            bookmarks=true,
            pdfauthor={$author-meta$},
            pdftitle={$title-meta$},
            colorlinks=true,
            urlcolor=$if(urlcolor)$$urlcolor$$else$blue$endif$,
            linkcolor=$if(linkcolor)$$linkcolor$$else$magenta$endif$,
            pdfborder={0 0 0}}
\urlstyle{same}  % don't use monospace font for urls
$if(links-as-notes)$
% Make links footnotes instead of hotlinks:
\renewcommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$
$if(strikeout)$
\usepackage[normalem]{ulem}
% avoid problems with \sout in headers with hyperref:
\pdfstringdefDisableCommands{\renewcommand{\sout}{}}
$endif$
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
\setlength{\emergencystretch}{3em}  % prevent overfull lines
$if(numbersections)$
$else$
\setcounter{secnumdepth}{0}
\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt$endif$
$if(verbatim-in-note)$
\VerbatimFootnotes % allows verbatim text in footnotes
$endif$
$if(lang)$
\ifxetex
  \usepackage{polyglossia}
  \setmainlanguage{$mainlang$}
\else
  \usepackage[$lang$]{babel}
\fi
$endif$
$for(header-includes)$
$header-includes$
$endfor$
$if(title)$
\title{$title$}
$endif$
\author{$for(author)$$author$$sep$ \and $endfor$}
\date{$date$}
\begin{document}
$if(title)$
\maketitle
$endif$
$for(include-before)$
$include-before$
$endfor$
$if(toc)$
{
\hypersetup{linkcolor=black}
\setcounter{tocdepth}{$toc-depth$}
\tableofcontents
}
$endif$
$body$
$if(natbib)$
$if(biblio-files)$
$if(biblio-title)$
$if(book-class)$
\renewcommand\bibname{$biblio-title$}
$else$
\renewcommand\refname{$biblio-title$}
$endif$
$endif$
\bibliography{$biblio-files$}
$endif$
$endif$
$if(biblatex)$
\printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$
$endif$
$for(include-after)$
$include-after$
$endfor$
\end{document}
~~~~~~~~~~~~~~~</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date><![CDATA[2015-05-19 06:08:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-18 22:08:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xeletax-%e4%b8%ad%e6%96%87%e4%b8%8d%e6%8d%a2%e8%a1%8c%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Excel 取消隐藏的列</title>
		<link>http://192.168.1.114/WordPress/2015/05/19/excel-%e5%8f%96%e6%b6%88%e9%9a%90%e8%97%8f%e7%9a%84%e5%88%97/</link>
		<pubDate>Mon, 18 May 2015 22:17:53 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="pcs-article-box_ptkaiapt4bxy_baiduscarticle">
<div class="pcs-article-c_ptkaiapt4bxy_baiduscarticle">
<div id="detailArticleContent_ptkaiapt4bxy_baiduscarticle" class="pcs-article-content_ptkaiapt4bxy_baiduscarticle">

在隐藏的列的表头上，光标放到隐藏的列的那个位置向两边拉，就把隐藏的列拉出来了。

Excel 2010 测试通过。

</div>
</div>
</div>
<div id="detailArticleFooter_ptkaiapt4bxy_baiduscarticle" class="footer"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date><![CDATA[2015-05-19 06:17:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-18 22:17:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[excel-%e5%8f%96%e6%b6%88%e9%9a%90%e8%97%8f%e7%9a%84%e5%88%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>python进制转换</title>
		<link>http://192.168.1.114/WordPress/2015/05/19/python%e8%bf%9b%e5%88%b6%e8%bd%ac%e6%8d%a2-2/</link>
		<pubDate>Mon, 18 May 2015 22:31:57 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[* 空间
<code>
#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 2/10/16 base trans. wrote by srcdog on 20th, April, 2009
# ld elements in base 2, 10, 16.

import os,sys

# global definition
# base = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F]
base = [str(x) for x in range(10)] + [ chr(x) for x in range(ord('A'),ord('A')+6)]

# bin2dec
# 二进制 to 十进制: int(str,n=10)
def bin2dec(string_num):
return str(int(string_num, 2))

# hex2dec
# 十六进制 to 十进制
def hex2dec(string_num):
return str(int(string_num.upper(), 16))

# dec2bin
# 十进制 to 二进制: bin()
def dec2bin(string_num):
num = int(string_num)
mid = []
while True:
if num == 0: break
num,rem = divmod(num, 2)
mid.append(base[rem])

return ''.join([str(x) for x in mid[::-1]])

# dec2hex
# 十进制 to 八进制: oct()
# 十进制 to 十六进制: hex()
def dec2hex(string_num):
num = int(string_num)
mid = []
while True:
if num == 0: break
num,rem = divmod(num, 16)
mid.append(base[rem])

return ''.join([str(x) for x in mid[::-1]])

# hex2tobin
# 十六进制 to 二进制: bin(int(str,16))
def hex2bin(string_num):
return dec2bin(hex2dec(string_num.upper()))

# bin2hex
# 二进制 to 十六进制: hex(int(str,2))
def bin2hex(string_num):
return dec2hex(bin2dec(string_num))

if __name__ == '__main__':
print bin2hex('111110')
print hex2bin('f1')
print dec2hex('255')
</code>
收藏于 2011-03-09
来自于百度空间]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date><![CDATA[2015-05-19 06:31:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-18 22:31:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python%e8%bf%9b%e5%88%b6%e8%bd%ac%e6%8d%a2-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>UML学习之听课</title>
		<link>http://192.168.1.114/WordPress/2015/05/19/uml%e5%ad%a6%e4%b9%a0%e4%b9%8b%e5%90%ac%e8%af%be/</link>
		<pubDate>Mon, 18 May 2015 22:54:41 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="pcs-article-box_ptkaiapt4bxy_baiduscarticle">
<h1 id="detailArticleTitle_ptkaiapt4bxy_baiduscarticle" class="pcs-article-title_ptkaiapt4bxy_baiduscarticle"></h1>
<div class="pcs-article-c_ptkaiapt4bxy_baiduscarticle">
<div id="detailArticleContent_ptkaiapt4bxy_baiduscarticle" class="pcs-article-content_ptkaiapt4bxy_baiduscarticle">      听了《尚学堂》关于UML学习的两天的课，自己感觉这课还不错吧，关键是讲的人结合了软件开发中的具体的经验，UML是一门工具，只有结合具体的应用场景，才能看见其价值。   这让课程主要讲了这几个方面：类图，顺序图，状态图，用例编写，其它的也基本上只是提到了一下。虽然结合的是Java的开发讲的，结合了一些Java的具体的框架，自己在这方面有些不懂。   不同的图相当于一种分析的解度，类图是静态的建模，顺序图对动态的建模。状态图用来描述一个特定的对象的所有可能的状态，以及由各种事件发生而引起的状态之间的转化。活动图用来描述事物或对象的活动变化流程。

对于类图：关键是理解和分析各种类之间的关联关系。学习中应注重与思想，而不仅仅停留在图的表面上，图只不过是思想的一种反映罢了，对于程序设计，还要结合具体的代码，例如，每一种关系，代码上是如何表现的，相反，图能够直观的反映代码的结构，比如学习设计模式，如果把设计模式都用类图表示出来。非常的直观，也很好记忆，也能更好的理解，用到这一设计模式，首先想到的是这一设计模式的类组，然后跟据自己的特定的情况，写代码就是了。
对于顺序图：顺序图反映了一种动态的过程，比如在哪课程中举的”登陆“过程例子，用顺序图非常直观的分析了这一过程，分析了各个模块（类）之间要进行的哪些交互，通过对这一过程的分析，设计者了解了程序完成某一件事情都需要做些什么，通过对交互图的认真分析，对于设计者，也可以得出类的功能划分——这一点原来自己一直感到很困惑，看老师演示这一过程，感觉自己有一点认识吧。通过功能来设计类，通过类图来理解系统，从静态和动态两个不同的方面认识系统，不同的角度，但却是一个整体。对于交互图的另一种：协作图，课程中只是提到了一下，演示了一下顺序图和协作图通过Rose的转换，说是一般用在公司的白板描述中，为了节约白板空间，自己不知这个描术是不是准确。
对于状态图：状态图应该是很重要的，这是一种程序员和客户都能看懂的图，在程序的设计阶段分析系统的各种可能的状态非常重要，否则的话，可能在开发的后期会导制系统结构的大的修改。课程中用一个开发校园一卡通作为例子，分析卡在不同时刻的状态，和不同的时刻的状态转化关系，非常直观。同时也用DVD机在工作过程中的状态用了演示。状态图对于系统的分析应该很有帮助吧。
这门课程最后还重点讲了如何作需求分析，如何写用例文档。提了一下GRASP(基于职责设计对象)模式。</div>
<div class="pcs-article-content_ptkaiapt4bxy_baiduscarticle"></div>
</div>
</div>
<div id="detailArticleFooter_ptkaiapt4bxy_baiduscarticle" class="footer">
<div class="time-cang">收藏于 2010-01-12</div>
<div class="link-src">来自于百度空间</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date><![CDATA[2015-05-19 06:54:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-18 22:54:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[uml%e5%ad%a6%e4%b9%a0%e4%b9%8b%e5%90%ac%e8%af%be]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>头文件及keil C的一点经验(转)</title>
		<link>http://192.168.1.114/WordPress/2015/05/19/%e5%a4%b4%e6%96%87%e4%bb%b6%e5%8f%8akeil-c%e7%9a%84%e4%b8%80%e7%82%b9%e7%bb%8f%e9%aa%8c%e8%bd%ac/</link>
		<pubDate>Mon, 18 May 2015 22:58:18 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="pcs-article-box_ptkaiapt4bxy_baiduscarticle">
<h1 id="detailArticleTitle_ptkaiapt4bxy_baiduscarticle" class="pcs-article-title_ptkaiapt4bxy_baiduscarticle"><a href="http://hi.baidu.com/fc/editor/fckeditor.html?InstanceName=spBlogText&amp;v=3.1&amp;Toolbar=Default&amp;v=3.1.html#">头文件及keil C的一点经验</a>·</h1>
<div class="pcs-article-c_ptkaiapt4bxy_baiduscarticle">
<div class="pcs-article-content_ptkaiapt4bxy_baiduscarticle"></div>
<div class="pcs-article-content_ptkaiapt4bxy_baiduscarticle">许多初学者使用网上下载的程序时都会遇到这样一个问题，就是头文件找不到。我想就这个问题说明一下。/
·首先，我们用到的KEIL有几种版本的，头文件也不同。有reg51.h和at89x51.h两种比较常见。at89x51和reg51这两个文件有点不同，reg51没有对IO口的位地址进行定义。所以我们在使用reg51的时候，可能会有一些相关语句通不过，比方说P0_1=1;这样的位操作。
文件都放在Keil的KEILC\C51\INC目录下，大家可以看看自己的KEIL版本使用了哪个头文件，也有些KEIL封装了reg51和at89x51两个头文件，都可以用。/
·头文件定义在程序的第一行，方法是#include ，如果提示这个文件找不到可以改为#include 试试。
·下面是一些使用心得，网上的.使用Keil C调试某系统时积累的一些经验

1、在Windows2000下面，我们可以把字体设置为Courier，这样就可以显示正常。
2、当使用有片外内存的MCU（如W77E58，它有1K片外内存）的时候，肯定要设置标志位，并且编译方式要选择大模式，否则会出错。
3、当使用Keil C跟踪程序运行状态的时候，要把引起Warning的语句屏蔽，否则有可能跟踪语句的时候会出错。
4、在调用数组的时候，Keil C是首先把数组Load进内存。如果要在C中使用长数组的时候，我们可以使用code关键字，这样就实现了汇编的DB的功能，Keil C是不会把标志code的数组Load入内存的，它会直接读取Rom。
5、拉高管脚的执行速度远远比检查管脚电平的要快。当编程涉及到有关通信，时序是很重要的。
6、在等待管脚电平变化的时候，我们需要设置好超时处理，否则程序就会因为一个没有预计的错误而死锁。
7、能用C语言实现的地方，尽量不要用汇编，尤其在算法的实现，用汇编是晦涩难懂。
8、程序的几个参数数组所占篇幅很大，其中液晶背景数组最长，有四千个Byte，因而把那些初始化数组都放在另外一个C文件，在主文件使用使用关键字extern定义，这样就不会对主文件的编写造成干扰。
9、所有函数之间的相关性越低越有利于以后功能的扩展。
10、6.20版在编译带code关键字的数组时，编译通过但是单片机运行结果是错误的，改用6.14版后正常。

</div>
</div>
</div>
<div id="detailArticleFooter_ptkaiapt4bxy_baiduscarticle" class="footer">
<div class="time-cang">收藏于 2009-09-27</div>
<div class="link-src">来自于百度空间</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date><![CDATA[2015-05-19 06:58:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-18 22:58:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%a4%b4%e6%96%87%e4%bb%b6%e5%8f%8akeil-c%e7%9a%84%e4%b8%80%e7%82%b9%e7%bb%8f%e9%aa%8c%e8%bd%ac]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Mac 下交换caps lock 与 Ctrl</title>
		<link>http://192.168.1.114/WordPress/2015/05/23/mac-%e4%b8%8b%e4%ba%a4%e6%8d%a2caps-lock-%e4%b8%8e-ctrl/</link>
		<pubDate>Sat, 23 May 2015 07:16:01 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=61</guid>
		<description></description>
		<content:encoded><![CDATA[习惯了HHKB之后表示经常把 caps lock 与 ctrl 键按错，就想在Mac上能不能把caps lock改成ctrl呢，研究了下，发现其实很简单：在键盘设置里面的修饰键就可以改过来，直接的选项，交换就行了。

不过嘛，看起来有点怪，因为caps lock上有个灯，大小状态还是这个灯显示的，但按下的意义又完全变了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date><![CDATA[2015-05-23 15:16:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-23 07:16:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mac-%e4%b8%8b%e4%ba%a4%e6%8d%a2caps-lock-%e4%b8%8e-ctrl]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>NSLog 开关</title>
		<link>http://192.168.1.114/WordPress/2015/05/24/nslog-%e5%bc%80%e5%85%b3/</link>
		<pubDate>Sun, 24 May 2015 06:42:36 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[开发IOS应用在发布的时候需要将全部的NSLog中去掉，怎么弄呢？可以使用一个宏来控制：

在系统包含的公共头文件中加入下面的语句：

<code>
#ifndef __OPTIMIZE__
# define NSLog(...) NSLog(__VA_ARGS__)
#else
# define NSLog(...) {}
#endif
</code>

一般情况下，Release版本系统会定义 __OPTIMIZE__ 宏，而Debug版本不会，根据这个差别使用不同的NSLog，从而达到上面的目的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date><![CDATA[2015-05-24 14:42:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-24 06:42:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nslog-%e5%bc%80%e5%85%b3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>关于</title>
		<link>http://192.168.1.114/WordPress/%e5%85%b3%e4%ba%8e/</link>
		<pubDate>Sun, 24 May 2015 06:56:21 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?page_id=71</guid>
		<description></description>
		<content:encoded><![CDATA[关于什么呢，我也不知道啊，游走在这个城里，寻找自己的出路。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date><![CDATA[2015-05-24 14:56:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-24 06:56:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%b3%e4%ba%8e]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>广告测试</title>
		<link>http://192.168.1.114/WordPress/?page_id=84</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?page_id=84</guid>
		<description></description>
		<content:encoded><![CDATA[<script>document.write(unescape('%3Cdiv id="hm_t_62389"%3E%3C/div%3E%3Cscript charset="utf-8" src="http://crs.baidu.com/t.js?siteId=6af137fdedb14ad05ecef7133e328a5f&planId=62389&async=0&referer=') + encodeURIComponent(document.referrer) + '&title=' + encodeURIComponent(document.title) + '&rnd=' + (+new Date) + unescape('"%3E%3C/script%3E'));</script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date><![CDATA[2015-05-24 17:45:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>首页</title>
		<link>http://192.168.1.114/WordPress/2015/05/24/%e9%a6%96%e9%a1%b5/</link>
		<pubDate>Sun, 24 May 2015 09:48:29 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date><![CDATA[2015-05-24 17:48:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-24 09:48:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%a6%96%e9%a1%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title></title>
		<link>http://192.168.1.114/WordPress/2015/05/24/87/</link>
		<pubDate>Sun, 24 May 2015 09:48:29 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=87</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date><![CDATA[2015-05-24 17:48:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-24 09:48:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[87]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title></title>
		<link>http://192.168.1.114/WordPress/2015/05/24/88/</link>
		<pubDate>Sun, 24 May 2015 09:48:29 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=88</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date><![CDATA[2015-05-24 17:48:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-24 09:48:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[88]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Git的两步提交</title>
		<link>http://192.168.1.114/WordPress/?p=170</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[1).从工作目录，提交到stage。
2).从stage提交到master。

从工作目录提交到stage，需要用add或者rm命令，只提交到stage，而没有提交到master，是不会自动同步到master的。

从stage提交到master用commit命令。

退回也是要分两步，一个是从master退回到stage，然后再从stage退回到工作目录。

对于还没有提交到stage的，可以从stage用checkout命令退回，这一步会取stage中的文件状态，覆盖掉工作目录中文件的状态，跟master完全没关系。

对于已经到达stage的，想把state中的文件状态用master中的覆盖掉，就用reset命令，这样就把stage中修改用master的状态覆盖掉了，完全跟工作目录没关系]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date><![CDATA[2016-03-10 20:22:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>简单与复杂</title>
		<link>http://192.168.1.114/WordPress/?p=211</link>
		<pubDate>Wed, 12 Apr 2017 01:08:24 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[人生是一门妥协的艺术，世人都戴着枷锁在跳舞。

哪些简单，哪些复杂？<span id="selectionBoundary_1492863757190_9249868623120806" class="rangySelectionBoundary" style="line-height: 0; display: none;">﻿</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date><![CDATA[2017-04-12 09:08:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-12 01:08:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>学习的秘密</title>
		<link>http://192.168.1.114/WordPress/?p=261</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=261</guid>
		<description></description>
		<content:encoded><![CDATA[不要停留在自己的舒适区

要刻意的训练]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date><![CDATA[2017-09-09 22:50:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>printer_paused</title>
		<link>http://192.168.1.114/WordPress/2018/08/31/%e8%a7%a3%e5%86%b3%e5%ae%b6%e9%87%8c%e9%9d%a2%e6%89%93%e5%8d%b0%e6%9c%ba%e6%9a%82%e5%81%9c%e7%9a%84%e9%97%ae%e9%a2%98/printer_paused/</link>
		<pubDate>Fri, 31 Aug 2018 13:54:29 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/wp-content/uploads/2018/08/printer_paused.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date><![CDATA[2018-08-31 21:54:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-31 13:54:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[printer_paused]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>311</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://wanqiang.wang/wp-content/uploads/2018/08/printer_paused.png]]></wp:attachment_url>
											</item>
					<item>
		<title>Fop支持连字符</title>
		<link>http://192.168.1.114/WordPress/?p=371</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>如何解决这个问题，现在一直没有好的办法。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date><![CDATA[2019-12-21 21:25:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						</item>
					<item>
		<title>IOS  解析点阵字库</title>
		<link>http://192.168.1.114/WordPress/2015/05/24/ios-%e8%a7%a3%e6%9e%90%e7%82%b9%e9%98%b5%e5%ad%97%e5%ba%93/</link>
		<pubDate>Sun, 24 May 2015 06:54:04 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=69</guid>
		<description></description>
		<content:encoded><![CDATA[# IOS  解析点阵字库

IOS控制点阵屏显示，加载点阵字库，目前已经实现，有感兴趣的留言，我把它整理出来。

我实现的是 16*16的中文和16*8的英文显法。

### 字库制作

制字方案的生成和成嵌入式系统上生成字模文件的方案是一样的。

### IOS从字库中取到字模

### 字模显示]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date><![CDATA[2015-05-24 14:54:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-24 06:54:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios-%e8%a7%a3%e6%9e%90%e7%82%b9%e9%98%b5%e5%ad%97%e5%ba%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>树莓派上安装docker</title>
		<link>http://192.168.1.114/WordPress/2015/05/27/%e6%a0%91%e8%8e%93%e6%b4%be%e4%b8%8a%e5%ae%89%e8%a3%85docker/</link>
		<pubDate>Tue, 26 May 2015 23:06:26 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[这应该是现在在树莓派上安装docker的最简单的方法了，因为是使用别人做好的镜像文件，通过SD卡烧写的方式，直接就可以用了。

参照下面的这个网址，在这个网站下载镜像，树莓派2B亲测是可用的。

http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device/

如果下载慢，可以从我的百度网盘上下载：

链接：http://pan.baidu.com/s/1dD94bU5 密码：2coe

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date><![CDATA[2015-05-27 07:06:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-05-26 23:06:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%a0%91%e8%8e%93%e6%b4%be%e4%b8%8a%e5%ae%89%e8%a3%85docker]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>IOS 8 的通知调试</title>
		<link>http://192.168.1.114/WordPress/2015/06/25/ios-8-%e7%9a%84%e9%80%9a%e7%9f%a5%e8%b0%83%e8%af%95/</link>
		<pubDate>Thu, 25 Jun 2015 00:11:33 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=96</guid>
		<description></description>
		<content:encoded><![CDATA[自己的一个App以前开发的，使用IOS的本地通知，一直没有人反馈过这点有什么问题。但最近几天，有人找我说，本地通知在iphone 6\6 plus 上不能用。

自己用iphone 6试了试，发现确实这样，但在4s上却没有问题，操作系统都是 IOS 8.3 。上网查了一下，发现ios 8 通知机制改了，使用之前必须要先注册设置。看来原因是这个了。看来同样是 ios 8, 4s的和6的还是不一样的。

那就开始吧，doing , done，按网上的教程在App代理中添加注册，一切预料之中，几分钟之后，本地通知在iphone 6 上终于可以跑起来了。好了，测一下吧，app 打开，没有问题，app 后台，没有问题，锁屏，哦，怎么回事，能收到通知，但没有声音，哪里出了问题？

由于对这个新的通知不熟悉，只能开始疯狂的查文档，google，baidu，bing,bang，一头雾水，4s没事，iphone6 锁屏就是没声，时间一分一秒过去，看不出一丝端疑。

当时间到了11：30的时候，我的4s界面上的一丝变化影起了我的注意，右上出现了一个月亮图标。晕，是不是打开了 防打扰模式 啊。敢快去 iphone 6上看，果然开着。晕到，关掉，再试，声音出来了。

一个多小时白白浪费。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date><![CDATA[2015-06-25 08:11:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-25 00:11:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios-8-%e7%9a%84%e9%80%9a%e7%9f%a5%e8%b0%83%e8%af%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>C++ 多重继承与转型的坑</title>
		<link>http://192.168.1.114/WordPress/2015/07/10/c-%e5%a4%9a%e9%87%8d%e7%bb%a7%e6%89%bf%e4%b8%8e%e8%bd%ac%e5%9e%8b%e7%9a%84%e5%9d%91/</link>
		<pubDate>Thu, 09 Jul 2015 22:55:54 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[多重继承的基类有两个基类，对于一个这样的对象，如何从一个类型切换到另外的一个类型呢？

对这个不熟悉的人，像我，拿过来就做了一个类型转换，对，就是把一个指针类型转换到另外的一个指针类型。想当然的理解为，这里可以多余但至少不会出错吧！

然后，后面用这个指针的调用，无论如何也不对了。当还和一堆别的问题纠缠在一起的时候，完全想不到是这里有问题。debug 。。。。

在别人的提示下：多重继承指针的切换，两个指针指向的地址是不一样的，但这个转型，地址确没有变？！去掉这个转型动作，一切OK。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date><![CDATA[2015-07-10 06:55:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-09 22:55:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c-%e5%a4%9a%e9%87%8d%e7%bb%a7%e6%89%bf%e4%b8%8e%e8%bd%ac%e5%9e%8b%e7%9a%84%e5%9d%91]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>ios 开发之：UIButton 不好点</title>
		<link>http://192.168.1.114/WordPress/2015/07/12/ios-%e5%bc%80%e5%8f%91%e4%b9%8b%ef%bc%9auibutton-%e4%b8%8d%e5%a5%bd%e7%82%b9/</link>
		<pubDate>Sun, 12 Jul 2015 03:13:49 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=101</guid>
		<description></description>
		<content:encoded><![CDATA[不好点啊，点不中。能看能摸没反应。

调试办法：把UIButton加背景，父对象加背景色，看是不是超出范围。

别的控件不响应点击也可能是这个问题。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date><![CDATA[2015-07-12 11:13:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-12 03:13:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios-%e5%bc%80%e5%8f%91%e4%b9%8b%ef%bc%9auibutton-%e4%b8%8d%e5%a5%bd%e7%82%b9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>linux  ssh执行命令断开ssh，命令不退出的方法</title>
		<link>http://192.168.1.114/WordPress/2015/07/19/linux-ssh%e6%89%a7%e8%a1%8c%e5%91%bd%e4%bb%a4%e6%96%ad%e5%bc%80ssh%ef%bc%8c%e5%91%bd%e4%bb%a4%e4%b8%8d%e9%80%80%e5%87%ba%e7%9a%84%e6%96%b9%e6%b3%95/</link>
		<pubDate>Sun, 19 Jul 2015 06:16:08 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[在树莓派上用ssh的 sox 命令行播放音乐，但是，退出ssh后，随着会话的关闭，播放也就停止了。在网上查找了下解决方法：

经测试，都是可以用的。

1. nohup 

用法：nohup play *.mp3

这样就可以了。

2. screen

这个在我的树莓派上要按装： apt-get install screen

用法：

先screen,  然后回车。执行自己的命令，我的是 play *.mp3

就可以关掉会话。

使用screen还要以重新打开这个会话：screen -r 

很强大，详情可以 man .]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date><![CDATA[2015-07-19 14:16:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-19 06:16:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-ssh%e6%89%a7%e8%a1%8c%e5%91%bd%e4%bb%a4%e6%96%ad%e5%bc%80ssh%ef%bc%8c%e5%91%bd%e4%bb%a4%e4%b8%8d%e9%80%80%e5%87%ba%e7%9a%84%e6%96%b9%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>linux 命令之：halt 不掉电</title>
		<link>http://192.168.1.114/WordPress/2015/07/28/linux-%e5%91%bd%e4%bb%a4%e4%b9%8b%ef%bc%9ahalt-%e4%b8%8d%e6%8e%89%e7%94%b5/</link>
		<pubDate>Tue, 28 Jul 2015 12:12:14 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[用halt 关机，每次都不断电，后面只能强关。

查了一下 man 手册，发现加个参数就可以了。

sudo halt -p 

电源终于一起关了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date><![CDATA[2015-07-28 20:12:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-28 12:12:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-%e5%91%bd%e4%bb%a4%e4%b9%8b%ef%bc%9ahalt-%e4%b8%8d%e6%8e%89%e7%94%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>linux 服务器远程下载</title>
		<link>http://192.168.1.114/WordPress/2015/08/01/linux-%e6%9c%8d%e5%8a%a1%e5%99%a8%e8%bf%9c%e7%a8%8b%e4%b8%8b%e8%bd%bd/</link>
		<pubDate>Sat, 01 Aug 2015 10:46:00 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>安装 aria2</strong>

sudo apt-get install aria2

这样装好了以后，就可以用 ssh 使用 aria2c 了。

但这样有个问题，下载比较花时间，ssh退出，服务就断开了，怎么解决呢？

<strong>安装 screen</strong>

sudo apt-get install screen

运行时，ssh 后，先 screen ，再在 screen 中 下载，这样就不用怕关 ssh 了。

用 ssh 总是有点不好吧？我不喜欢怎么办？

有个web gui 可以选择。先在服务器上把 aria2 服务跑起来。
<p class="p1"><span class="s1">aria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all -c</span></p>
<p class="p1">执行上面的这个就可以了。</p>
<p class="p1">下面打开网站：http://aria2c.com/</p>
<p class="p1">这个界面的右上有个搬手，点入那个界面，配置好里面的ip，改成服务器ip, 保存。</p>
<p class="p1">现在就可以以后在这个网址上，添加下载任务了，当然文件是下载到你的服务器上的。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date><![CDATA[2015-08-01 18:46:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-08-01 10:46:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-%e6%9c%8d%e5%8a%a1%e5%99%a8%e8%bf%9c%e7%a8%8b%e4%b8%8b%e8%bd%bd]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>linux 安装 docker</title>
		<link>http://192.168.1.114/WordPress/2015/08/01/linux-%e5%ae%89%e8%a3%85-docker/</link>
		<pubDate>Sat, 01 Aug 2015 10:50:29 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=111</guid>
		<description></description>
		<content:encoded><![CDATA[sudo apt-get install docker 不行啊，怎么回事？

网上查了下，正常应该是这样的：

sudo apt-get install docker.io

了个去！！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date><![CDATA[2015-08-01 18:50:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-08-01 10:50:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-%e5%ae%89%e8%a3%85-docker]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>linux 软件 raid 1 同步慢的问题</title>
		<link>http://192.168.1.114/WordPress/2015/08/30/linux-%e8%bd%af%e4%bb%b6-raid-1-%e5%90%8c%e6%ad%a5%e6%85%a2%e7%9a%84%e9%97%ae%e9%a2%98/</link>
		<pubDate>Sun, 30 Aug 2015 05:38:28 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[原因其实很简单，不要先急着将盘挂载上去，同步的过程先卸载掉。速度会成百倍的提升，同步完了再monut回来吧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date><![CDATA[2015-08-30 13:38:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-08-30 05:38:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-%e8%bd%af%e4%bb%b6-raid-1-%e5%90%8c%e6%ad%a5%e6%85%a2%e7%9a%84%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>ubuntu 启动默认进入命令行的修改方法</title>
		<link>http://192.168.1.114/WordPress/2015/09/02/ubuntu-%e5%90%af%e5%8a%a8%e9%bb%98%e8%ae%a4%e8%bf%9b%e5%85%a5%e5%91%bd%e4%bb%a4%e8%a1%8c%e7%9a%84%e4%bf%ae%e6%94%b9%e6%96%b9%e6%b3%95/</link>
		<pubDate>Wed, 02 Sep 2015 14:10:16 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=116</guid>
		<description></description>
		<content:encoded><![CDATA[首先，编辑sudo vi /etc/default/grub 文件，找到如下行:

GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"

将其注释掉（待恢复时可用）

#GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"

然后，添加以下内容

GRUB_CMDLINE_LINUX_DEFAULT="text"

保存文件并退出

最后，使用 sudo update-grub 命令，使配置生效

reboot 启动系统即可。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date><![CDATA[2015-09-02 22:10:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-09-02 14:10:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu-%e5%90%af%e5%8a%a8%e9%bb%98%e8%ae%a4%e8%bf%9b%e5%85%a5%e5%91%bd%e4%bb%a4%e8%a1%8c%e7%9a%84%e4%bf%ae%e6%94%b9%e6%96%b9%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>解决Docker的两个问题</title>
		<link>http://192.168.1.114/WordPress/2016/02/28/%e8%a7%a3%e5%86%b3docker%e7%9a%84%e4%b8%a4%e4%b8%aa%e9%97%ae%e9%a2%98/</link>
		<pubDate>Sun, 28 Feb 2016 01:01:19 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=119</guid>
		<description></description>
		<content:encoded><![CDATA[解决运行docker 命令一直要用sudo的问题

# 添加docker用户组
$ sudo groupadd docker
# 把自己加到docker用户组中
$ sudo gpasswd -a myusername docker
# 重启docker后台服务
$ sudo service docker restart
# 注销，然后再登陆
$ exit

删除所有运行的docker容器

$ docker rm $(docker ps -a -q)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date><![CDATA[2016-02-28 09:01:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-28 01:01:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%a7%a3%e5%86%b3docker%e7%9a%84%e4%b8%a4%e4%b8%aa%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>IOS开发：获取屏幕大小的宏</title>
		<link>http://192.168.1.114/WordPress/2016/03/01/ios%e5%bc%80%e5%8f%91%ef%bc%9a%e8%8e%b7%e5%8f%96%e5%b1%8f%e5%b9%95%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%ae%8f/</link>
		<pubDate>Tue, 01 Mar 2016 12:50:23 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="p1"><span class="s1">//</span><span class="s2">获取设备屏幕尺寸</span></p>
<p class="p2"><span class="s2">#define SCREEN_WIDTH ([UIScreen mainScreen].bounds.size.width)</span></p>
<p class="p2"><span class="s2">#define SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)</span><span class="s3">//</span><span class="s4">应用尺寸</span></p>
<p class="p2"><span class="s2">#define APP_WIDTH [[UIScreen mainScreen]applicationFrame].size.width</span></p>
<p class="p2"><span class="s2">#define APP_HEIGHT [[UIScreen mainScreen]applicationFrame].size.height</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date><![CDATA[2016-03-01 20:50:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-01 12:50:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios%e5%bc%80%e5%8f%91%ef%bc%9a%e8%8e%b7%e5%8f%96%e5%b1%8f%e5%b9%95%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%ae%8f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>IOS开发：生成时间字符串</title>
		<link>http://192.168.1.114/WordPress/2016/03/01/ios%e5%bc%80%e5%8f%91%ef%bc%9a%e7%94%9f%e6%88%90%e6%97%b6%e9%97%b4%e5%ad%97%e7%ac%a6%e4%b8%b2/</link>
		<pubDate>Tue, 01 Mar 2016 12:55:48 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=123</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="p1"><span class="s1">//</span><span class="s2">时间标记字符串生成</span></p>
<p class="p2"><span class="s2">-(</span><span class="s3">NSString</span><span class="s2">*)TimeStamp</span></p>
<p class="p2"><span class="s2">{</span></p>
<p class="p2"><span class="s2"><span class="Apple-converted-space">    </span></span><span class="s3">NSDate</span><span class="s2"> *today = [</span><span class="s3">NSDate</span> <span class="s3">date</span><span class="s2">];</span></p>
<p class="p3"><span class="s4"><span class="Apple-converted-space">    </span></span><span class="s2">NSDateFormatter</span><span class="s4"> *dateFormatter = [[</span><span class="s2">NSDateFormatter</span> <span class="s2">alloc</span><span class="s4">]</span><span class="s2">init</span><span class="s4">];</span></p>
<p class="p2"><span class="s2"><span class="Apple-converted-space">    </span>[dateFormatter </span><span class="s3">setDateFormat</span><span class="s2">:</span><span class="s5">@"yyyy-MM-dd hh:mm:ss"</span><span class="s2">];</span></p>
<p class="p2"><span class="s2"><span class="Apple-converted-space">    </span></span><span class="s3">NSString</span><span class="s2"> *strDate = [dateFormatter </span><span class="s3">stringFromDate</span><span class="s2">:today];</span></p>
<p class="p2"><span class="s2"><span class="Apple-converted-space">    </span></span><span class="s3">NSLog</span><span class="s2">(</span><span class="s5">@"Time: %@"</span><span class="s2">,strDate);</span></p>
<p class="p2"><span class="s2"><span class="Apple-converted-space">    </span></span><span class="s6">return</span><span class="s2"> strDate;</span></p>
<p class="p2"><span class="s2">}</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date><![CDATA[2016-03-01 20:55:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-01 12:55:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios%e5%bc%80%e5%8f%91%ef%bc%9a%e7%94%9f%e6%88%90%e6%97%b6%e9%97%b4%e5%ad%97%e7%ac%a6%e4%b8%b2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>docker设置代理</title>
		<link>http://192.168.1.114/WordPress/2016/03/02/docker%e8%ae%be%e7%bd%ae%e4%bb%a3%e7%90%86/</link>
		<pubDate>Wed, 02 Mar 2016 08:18:41 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[使用下面的命令就可以设置，替换你的IP和端口。
sudo HTTP_PROXY=10.160.8.99:808  docker -d&amp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date><![CDATA[2016-03-02 16:18:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-02 08:18:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker%e8%ae%be%e7%bd%ae%e4%bb%a3%e7%90%86]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Linux 下挂Windows的共享目录</title>
		<link>http://192.168.1.114/WordPress/2016/03/02/linux-%e4%b8%8b%e6%8c%82windows%e7%9a%84%e5%85%b1%e4%ba%ab%e7%9b%ae%e5%bd%95/</link>
		<pubDate>Wed, 02 Mar 2016 09:41:12 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[mount -t cifs -o username=windowsusername //windows machine/sharefiles /mnt/localfolder

如：
sudo mount -t cifs -o username=wwq,password=xxxxxx  //10.2.37.56/Users/wwq/Desktop/work  /mnt/share
其中：
windowsusername : Windows用户名
windows machine ：Windows机器名
sharefiles ：Windows共享文件夹名
然后就可以在 /mnt/localfolder 下访问Windows内容。
注意要先创建目录，这里是 /mnt/share]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date><![CDATA[2016-03-02 17:41:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-02 09:41:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-%e4%b8%8b%e6%8c%82windows%e7%9a%84%e5%85%b1%e4%ba%ab%e7%9b%ae%e5%bd%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>docker安装Gitlab</title>
		<link>http://192.168.1.114/WordPress/2016/03/03/docker%e5%ae%89%e8%a3%85gitlab/</link>
		<pubDate>Thu, 03 Mar 2016 02:27:03 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[这里用到了一个第三方的镜像：

Step 1. Launch a postgresql container

<pre><code>docker run --name gitlab-postgresql -d \
    --env 'DB_NAME=gitlabhq_production' \
    --env 'DB_USER=gitlab' --env 'DB_PASS=password' \
    --volume /srv/docker/gitlab/postgresql:/var/lib/postgresql \
    sameersbn/postgresql:9.4-13
</code></pre>

Step 2. Launch a redis container

<pre><code>docker run --name gitlab-redis -d \
    --volume /srv/docker/gitlab/redis:/var/lib/redis \
    sameersbn/redis:latest
</code></pre>

Step 3. Launch the gitlab container

<pre><code>docker run --name gitlab -d \
    --link gitlab-postgresql:postgresql --link gitlab-redis:redisio \
    --publish 10022:22 --publish 10080:80 \
    --env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022' \
    --env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \
    --volume /srv/docker/gitlab/gitlab:/home/git/data \
    sameersbn/gitlab:8.5.1
</code></pre>

Please refer to Available Configuration Parameters to understand GITLAB_PORT and other configuration options

NOTE: Please allow a couple of minutes for the GitLab application to start.

Point your browser to http://localhost:10080 and login using the default username and password:

<blockquote>
  username: root
  password: 5iveL!fe
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date><![CDATA[2016-03-03 10:27:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-03 02:27:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker%e5%ae%89%e8%a3%85gitlab]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>gem 设置代理</title>
		<link>http://192.168.1.114/WordPress/2016/03/04/gem-%e8%ae%be%e7%bd%ae%e4%bb%a3%e7%90%86/</link>
		<pubDate>Fri, 04 Mar 2016 02:35:39 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[按下面的方法可行

sudo gem install gollum -p http://10.160.8.97:808]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date><![CDATA[2016-03-04 10:35:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-04 02:35:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[gem-%e8%ae%be%e7%bd%ae%e4%bb%a3%e7%90%86]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Git: 利用Git的subtree功能在不同工程共享代码</title>
		<link>http://192.168.1.114/WordPress/2016/03/05/git-%e5%88%a9%e7%94%a8git%e7%9a%84subtree%e5%8a%9f%e8%83%bd%e5%9c%a8%e4%b8%8d%e5%90%8c%e5%b7%a5%e7%a8%8b%e5%85%b1%e4%ba%ab%e4%bb%a3%e7%a0%81/</link>
		<pubDate>Sat, 05 Mar 2016 02:26:27 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=156</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. 第一次添加子目录，建立与git项目的关联</h2>

建立关联总共有2条命令。

语法： git remote add -f &lt;子仓库名> &lt;子仓库地址>

解释：其中-f意思是在添加远程仓库之后，立即执行fetch。

语法： git subtree add --prefix=&lt;子目录名> &lt;子仓库名> &lt;分支> --squash

解释：–squash意思是把subtree的改动合并成一次commit，这样就不用拉取子项目完整的历史记录。–prefix之后的=等号也可以用空格。

示例

<pre><code>$git remote add -f ai https://github.com/aoxu/ai.git  
$git subtree add --prefix=ai ai master --squash
</code></pre>

<h2>2. 从远程仓库更新子目录</h2>

更新子目录有2条命令。

语法： git fetch &lt;远程仓库名> &lt;分支>

语法： git subtree pull --prefix=&lt;子目录名> &lt;远程分支> &lt;分支> --squash

示例

<pre><code>$git fetch ai master  
$git subtree pull --prefix=ai ai --squash
</code></pre>

<h2>3. 从子目录push到远程仓库（确认你有写权限）</h2>

推送子目录的变更有1条命令。

语法： git subtree push --prefix=&lt;子目录名> &lt;远程分支名> 分支

示例

<pre><code>$git subtree push --prefix=ai ai master
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date><![CDATA[2016-03-05 10:26:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-05 02:26:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-%e5%88%a9%e7%94%a8git%e7%9a%84subtree%e5%8a%9f%e8%83%bd%e5%9c%a8%e4%b8%8d%e5%90%8c%e5%b7%a5%e7%a8%8b%e5%85%b1%e4%ba%ab%e4%bb%a3%e7%a0%81]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>mac下登陆ssh报错解决</title>
		<link>http://192.168.1.114/WordPress/2016/03/06/mac%e4%b8%8b%e7%99%bb%e9%99%86ssh%e6%8a%a5%e9%94%99%e8%a7%a3%e5%86%b3/</link>
		<pubDate>Sun, 06 Mar 2016 01:05:00 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[mac登陆服务器，不能成功，报下面的错误：

Could not resolve hostname xxxxx.com:9527: nodename nor servname provided, or not known

但是如果在局域网内有没有问题，检查了下自己的输入的命令：

<pre><code>ssh xxx@xxxxx.com:9527
</code></pre>

会出现问题，如果是这样，就可以：

<pre><code>ssh xxx@192.168.1.5
</code></pre>

就可以

<h3>怎么处理呢？</h3>

能过查找发现，要解决这个问题，命令换个写法就可以了：

<pre><code>ssh -p 22221 xxx@xxxxx.com
</code></pre>

就可以了。

<h3>但又是什么原因呢？</h3>

个人猜测，应该是，mac的ssh程序解析域名的时候，识别不出后面的端口，有bug，同样的做法，用别的ssh客户端就可以了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date><![CDATA[2016-03-06 09:05:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-06 01:05:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mac%e4%b8%8b%e7%99%bb%e9%99%86ssh%e6%8a%a5%e9%94%99%e8%a7%a3%e5%86%b3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Git基本使用（1）</title>
		<link>http://192.168.1.114/WordPress/2016/03/08/git%e5%9f%ba%e6%9c%ac%e4%bd%bf%e7%94%a8%ef%bc%881%ef%bc%89/</link>
		<pubDate>Tue, 08 Mar 2016 00:27:10 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Git 基础使用</h1>

结合这两天的基本使用情况，进行总结：

<h2>创建分支</h2>

<pre><code>$ git checkout -b dev # 创建并切换

</code></pre>

这样就创建了一个名字叫着 dev 的分支。

注意到这里的 checkout 命令名，他和切换分支是一个命令，只不带了一个 b 参数。

<h2>切换分支</h2>

<pre><code>$ git checkout dev  # 切换

</code></pre>

不带参数，这就是切换到了dev分支。

<h2>合并分支</h2>

<pre><code>$ git merge dev # 从dev分支合并

</code></pre>

把dev分支的修改合并到当前的分支

<h2>查看分支</h2>

<pre><code>$ git branch

</code></pre>

如果你安装了 oh-my-zsh的git支持的话，查看分支其实很少用，补全太强大了，在需要查看分支的地方，可以临时补全显示出来，选择需要操作。

<h2>版本回退</h2>

<ul>
<li>回退版本</li>
</ul>

<pre><code>$ git reset --hard HEAD^     #回滚上一个版本

$ git reset --hard HEAD^^    #回滚上上一个版本

$ git reset --hard HEAD~100  #回滚上100个版本

</code></pre>

这里和SVN的更新到某个版本不一样，svn这时你去看log,自己确实处理中间的某一个版本，而在Git上，此时 Git log，最上面的版本就是回退后的版本。

<h2>撤消版本回退</h2>

回到未来的版本可以用下面的命令：

<pre><code>$ git reset --hard 3628164

</code></pre>

后面的数字是Git的版本号，可以使用 git log, git reflog 去找这个版本号，也可以从 gitlab, github这样的服务器上去取，当然你要是从这些服务器上 clone 过来。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date><![CDATA[2016-03-08 08:27:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-08 00:27:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git%e5%9f%ba%e6%9c%ac%e4%bd%bf%e7%94%a8%ef%bc%881%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>gem 安装 json 报错</title>
		<link>http://192.168.1.114/WordPress/2016/03/08/gem-%e5%ae%89%e8%a3%85-json-%e6%8a%a5%e9%94%99/</link>
		<pubDate>Tue, 08 Mar 2016 13:06:43 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=167</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>问题</h2>

编译一个开源书辑时，运行 bundle install 命令报错，让安装 json -v '1.8.1'，但报错。

<pre><code><br />sudo gem install json -v '1.8.1'

Building native extensions.  This could take a while...
ERROR:  Error installing json:
    ERROR: Failed to build gem native extension.

        /usr/bin/ruby1.9.1 extconf.rb
/usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require': cannot load such file -- mkmf (LoadError)
    from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
    from extconf.rb:1:in `&lt;main&gt;'


Gem files will remain installed in /var/lib/gems/1.9.1/gems/json-1.8.1 for inspection.
Results logged to /var/lib/gems/1.9.1/gems/json-1.8.1/ext/json/ext/generator/gem_make.out

</code></pre>

<h2>解决</h2>

添加 ruby1.9.1-dev包就可以解决这个问题了。

<pre><code>sudo apt-get install ruby1.9.1-
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date><![CDATA[2016-03-08 21:06:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-08 13:06:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[gem-%e5%ae%89%e8%a3%85-json-%e6%8a%a5%e9%94%99]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>xcode 根据不同的编译目标加载不同的库</title>
		<link>http://192.168.1.114/WordPress/2016/03/10/xcode-%e6%a0%b9%e6%8d%ae%e4%b8%8d%e5%90%8c%e7%9a%84%e7%bc%96%e8%af%91%e7%9b%ae%e6%a0%87%e5%8a%a0%e8%bd%bd%e4%b8%8d%e5%90%8c%e7%9a%84%e5%ba%93/</link>
		<pubDate>Thu, 10 Mar 2016 14:05:27 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[在xcode上开发IOS程序，可以将一个项目编译模拟器和真机，对应着又分别有debug和Release, 相应的别人提供的库也可能按这样给的，代码中要怎么加载呢？

xcode中可以直接配置：

打开工程配置文件，选择 “TARGETS”,找到“Build Settings”选项卡，然后找到“Search Paths”，设置“Library Search Paths”。根据不同的平台选择相应的库的路径就可以了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date><![CDATA[2016-03-10 22:05:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-10 14:05:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xcode-%e6%a0%b9%e6%8d%ae%e4%b8%8d%e5%90%8c%e7%9a%84%e7%bc%96%e8%af%91%e7%9b%ae%e6%a0%87%e5%8a%a0%e8%bd%bd%e4%b8%8d%e5%90%8c%e7%9a%84%e5%ba%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>重启minidlna</title>
		<link>http://192.168.1.114/WordPress/2016/03/21/%e9%87%8d%e5%90%afminidlna/</link>
		<pubDate>Mon, 21 Mar 2016 06:52:34 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[服务器文件大调整，盒子上看文件发现需多不对了，重启一下就好了：
用下面的命令：

<pre><code>sudo /etc/init.d/minidlna force-reload 
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date><![CDATA[2016-03-21 14:52:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-21 06:52:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%87%8d%e5%90%afminidlna]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Mac 外接显示器颜色问题</title>
		<link>http://192.168.1.114/WordPress/2016/03/31/mac-%e5%a4%96%e6%8e%a5%e6%98%be%e7%a4%ba%e5%99%a8%e9%a2%9c%e8%89%b2%e9%97%ae%e9%a2%98/</link>
		<pubDate>Thu, 31 Mar 2016 14:01:41 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[自己的mac屏幕太小，外接了一个显示器，发现颜色偏白，有点晃眼，调来调去搞不好。网上的方法也是各种方法。

其实Apple自己的显示器设置里面就能搞好。

系统偏好设置-》显示器-》颜色-》校准

然后看着效果一步一步来，就能调整到自己满意的效果。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date><![CDATA[2016-03-31 22:01:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-31 14:01:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mac-%e5%a4%96%e6%8e%a5%e6%98%be%e7%a4%ba%e5%99%a8%e9%a2%9c%e8%89%b2%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Micro Gen8 sata5 启动 Linux</title>
		<link>http://192.168.1.114/WordPress/2016/05/02/micro-gen8-sata5-%e5%90%af%e5%8a%a8-linux/</link>
		<pubDate>Mon, 02 May 2016 02:47:07 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[经过5+小时的尝试，终于找到了方法。参考了这个文章：http://www.newsmth.net/nForum/#!article/DigiHome/419729
1. 找一张TF卡，我的是2G的。
2. 启动盘准备的时候，我能进到Linux中，但是用grub-install死活也装不好，浪费了好多时间，各种参数。最后没有办法，使用了这个文章准备的grub镜像，直接用win32diskImager写的启动盘。
3. 但这个启动盘能进grub，但不能启动我的系统，我和文章的不一样的，我的sata5位置是我安装好的xunbuntu。
4. 去掉所有的盘，只留一个sata5的系统盘，进入系统。在安装好的系统盘中，找到/boot/grub/grub.cfg，复制这个文件替换掉Tf卡里的这个文件。
5. 重新开机吧，setup里面选择U盘启动。再插其它的硬盘，总会是从sata5启动的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date><![CDATA[2016-05-02 10:47:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-02 02:47:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[micro-gen8-sata5-%e5%90%af%e5%8a%a8-linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Linux软raid恢复后md127问题</title>
		<link>http://192.168.1.114/WordPress/2016/05/02/linux%e8%bd%afraid%e6%81%a2%e5%a4%8d%e5%90%8emd127%e9%97%ae%e9%a2%98/</link>
		<pubDate>Mon, 02 May 2016 07:28:07 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[<ol>
<li>检查/etc/mdadm/mdadm.conf，内容是对的，但重启后，还是md127.</li>
<li>在网上看到这个：</li>
</ol>

查看md0的UUID：
sudo mdadm --detail /dev/md0
拷贝下来UUID 7f59975e:9e637932:dce17021:f68cb000
然后：sudo vim /etc/mdadm/mdadm.conf
在文件的靠前位置，加入这一行：
ARRAY /dev/md0 UUID=7f59975e:9e637932:dce17021:f68cb000
:wq!强制保存后退出vim，下一步很重要！You need to update initramfs so it contains your mdadm.conf settings during boot.
<strong>sudo update-initramfs -u</strong>
否则，重启系统，mdadm会自动将raid1生成/dev/md127，而不是/dev/md0。

update-initramfs 后，确实管用。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date><![CDATA[2016-05-02 15:28:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-02 07:28:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux%e8%bd%afraid%e6%81%a2%e5%a4%8d%e5%90%8emd127%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Qt Creator选择 run in terminal后不能启动程序的问题</title>
		<link>http://192.168.1.114/WordPress/2016/06/16/qt-creator%e9%80%89%e6%8b%a9-run-in-terminal%e5%90%8e%e4%b8%8d%e8%83%bd%e5%90%af%e5%8a%a8%e7%a8%8b%e5%ba%8f%e7%9a%84%e9%97%ae%e9%a2%98/</link>
		<pubDate>Thu, 16 Jun 2016 05:48:59 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[升级4.X以后，出现这个问题，一直卡在加载程序的地方，取消掉这个选项就没有问题。
解决的方法是：不要使用默认的终端程序，使用 xterm

Under Tools-Options-Environment-General, change the terminal value from x-terminal-emulator -e to  /usr/bin/xterm -e.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date><![CDATA[2016-06-16 13:48:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-16 05:48:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[qt-creator%e9%80%89%e6%8b%a9-run-in-terminal%e5%90%8e%e4%b8%8d%e8%83%bd%e5%90%af%e5%8a%a8%e7%a8%8b%e5%ba%8f%e7%9a%84%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>log4cplus 使用问题总结</title>
		<link>http://192.168.1.114/WordPress/2016/08/16/log4cplus-%e4%bd%bf%e7%94%a8%e9%97%ae%e9%a2%98%e6%80%bb%e7%bb%93/</link>
		<pubDate>Tue, 16 Aug 2016 00:58:21 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=197</guid>
		<description></description>
		<content:encoded><![CDATA[一个问题浪费两次时间，真是一个悲伤的故事。

问题出在对于按时间归档的 Appender 的理解失误上，在网上找啊找啊，都是千篇一律的抄来抄去，完全不符合要求。明明记得在不久以前处理过这个问题，但却就忘了提交了呢。宝宝心里苦啊。

我这里要求是按时间生成文件名，也就是文件名是按当时的时间去确定的。当是库上的版本却用了 DailyRollingFileAppender 这个。这个的在确的意思是，多长时是一归档，当然归档会有一个文件名的规则。
而这里的问题正确应该用：TimeBasedRollingFileAppender

下面是一个例子：

<code>
log4cplus.appender.OTS_H=log4cplus::TimeBasedRollingFileAppender
log4cplus.appender.OTS_H.MaxHistory=10
log4cplus.appender.OTS_H.FilenamePattern=%d{yyyy-MM-dd-HH-mm}_OTS.csv
log4cplus.appender.OTS_H.layout=log4cplus::PatternLayout<br />
log4cplus.appender.OTS_H.layout.ConversionPattern=%m%n
log4cplus.appender.OTS_H.RollOnClose=false
log4cplus.appender.OTS_H.Schedule=DAILY
log4cplus.appender.OTS_H.CreateDirs=true
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date><![CDATA[2016-08-16 08:58:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-16 00:58:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[log4cplus-%e4%bd%bf%e7%94%a8%e9%97%ae%e9%a2%98%e6%80%bb%e7%bb%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>win10 打不开samba文件夹的解决方法</title>
		<link>http://192.168.1.114/WordPress/2016/10/02/win10-%e6%89%93%e4%b8%8d%e5%bc%80samba%e6%96%87%e4%bb%b6%e5%a4%b9%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95/</link>
		<pubDate>Sun, 02 Oct 2016 01:37:30 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[Win10 打不开局域网电脑共享的文件夹。

在网上搜了一下，说关掉Pin的，也有说不要用微软帐户的。我试了一下，只关掉PIN是不行的，但不能用指纹登陆了。关掉微软帐户，启用本地帐户，重启就可以。

也有说关掉自动同步，可以用微软帐户的，试了下，应该是不行的。

难道要访问局域网中的资源，只能用本地帐户？ 我想微软应该不会这么傻X吧。肯定是哪里没有设置好。

把设置找了一遍，果然找到了：

Control Panel\Network and Internet\Network and Sharing Centre\Advanced sharing settings

下面的 File and Printer share 默认是关闭的。打开以后就可以了。

这个应该才是正确的解锁姿势，默认是关闭的，默认是关闭的，默认是关闭的。晕倒。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date><![CDATA[2016-10-02 09:37:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-10-02 01:37:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[win10-%e6%89%93%e4%b8%8d%e5%bc%80samba%e6%96%87%e4%bb%b6%e5%a4%b9%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>bitnami安装的程序如何去掉欢迎页面。</title>
		<link>http://192.168.1.114/WordPress/2016/10/19/bitnami%e5%ae%89%e8%a3%85%e7%9a%84%e7%a8%8b%e5%ba%8f%e5%a6%82%e4%bd%95%e5%8e%bb%e6%8e%89%e6%ac%a2%e8%bf%8e%e9%a1%b5%e9%9d%a2%e3%80%82/</link>
		<pubDate>Wed, 19 Oct 2016 11:31:48 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[就是网址打开的那个页面。去掉它直接进入安装的程序。

方法如下：

<ol>
<li>在开始菜单找到安装程序的命令行的窗口。执行。</li>
<li>cd 命令进入到 apps 目录下面的程序的目录下：比如我这个：D:\Bitnami\redmine-3.3.1-0\apps\redmine></li>
<li>执行这个目录下面的 bnconfig.exe 程序，参数像这样： bnconfig.exe --appurl /</li>
</ol>

然后再到开始菜单中去重启整个服务。

我用的是Windows版，别的应该也是一样的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date><![CDATA[2016-10-19 19:31:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-10-19 11:31:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bitnami%e5%ae%89%e8%a3%85%e7%9a%84%e7%a8%8b%e5%ba%8f%e5%a6%82%e4%bd%95%e5%8e%bb%e6%8e%89%e6%ac%a2%e8%bf%8e%e9%a1%b5%e9%9d%a2%e3%80%82]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>docker 下载加速</title>
		<link>http://192.168.1.114/WordPress/2017/04/12/docker-%e4%b8%8b%e8%bd%bd%e5%8a%a0%e9%80%9f/</link>
		<pubDate>Wed, 12 Apr 2017 13:54:26 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=213</guid>
		<description></description>
		<content:encoded><![CDATA[直接下载官方的docker镜像，慢得很。
下面这个地址可以加速：
https://www.daocloud.io/mirror#accelerator-doc]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date><![CDATA[2017-04-12 21:54:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-12 13:54:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-%e4%b8%8b%e8%bd%bd%e5%8a%a0%e9%80%9f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>如何进入正在运行的Docker容器</title>
		<link>http://192.168.1.114/WordPress/2017/04/14/%e5%a6%82%e4%bd%95%e8%bf%9b%e5%85%a5%e6%ad%a3%e5%9c%a8%e8%bf%90%e8%a1%8c%e7%9a%84docker%e5%ae%b9%e5%99%a8/</link>
		<pubDate>Fri, 14 Apr 2017 11:10:02 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=216</guid>
		<description></description>
		<content:encoded><![CDATA[网上有很多种方式，比如ssh什么的。但下面这种方法我认为应该是最好，最方便的。

<code>
$ sudo docker ps
$ sudo docker exec -it 775c7c9ee1e1 /bin/bash

</code>

其中775c7c9ee1e1是容器的运行时id。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date><![CDATA[2017-04-14 19:10:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-14 11:10:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%a6%82%e4%bd%95%e8%bf%9b%e5%85%a5%e6%ad%a3%e5%9c%a8%e8%bf%90%e8%a1%8c%e7%9a%84docker%e5%ae%b9%e5%99%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>用阿里云解决Jcenter下载太慢的问题。</title>
		<link>http://192.168.1.114/WordPress/2017/04/17/%e7%94%a8%e9%98%bf%e9%87%8c%e4%ba%91%e8%a7%a3%e5%86%b3jcenter%e4%b8%8b%e8%bd%bd%e5%a4%aa%e6%85%a2%e7%9a%84%e9%97%ae%e9%a2%98%e3%80%82/</link>
		<pubDate>Mon, 17 Apr 2017 14:20:56 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=222</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>亲测速度，极好。</strong>

使用阿里云的国内镜像仓库地址，修改项目根目录下的文件 build.gradle ：

<code> 
buildscript {
   repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
}

allprojects {
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
}
</code>

然后选择重新构建项目就可以了]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 22:20:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 14:20:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%94%a8%e9%98%bf%e9%87%8c%e4%ba%91%e8%a7%a3%e5%86%b3jcenter%e4%b8%8b%e8%bd%bd%e5%a4%aa%e6%85%a2%e7%9a%84%e9%97%ae%e9%a2%98%e3%80%82]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>IOS客户端代码复用方案</title>
		<link>http://192.168.1.114/WordPress/2017/04/19/ios%e5%ae%a2%e6%88%b7%e7%ab%af%e4%bb%a3%e7%a0%81%e5%a4%8d%e7%94%a8%e6%96%b9%e6%a1%88/</link>
		<pubDate>Wed, 19 Apr 2017 01:18:24 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[不错一遍文章，收藏。

http://shellhue.github.io/2017/04/08/sharecode/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date><![CDATA[2017-04-19 09:18:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-19 01:18:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios%e5%ae%a2%e6%88%b7%e7%ab%af%e4%bb%a3%e7%a0%81%e5%a4%8d%e7%94%a8%e6%96%b9%e6%a1%88]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>PHP利用PHPExcel操作Excel文件</title>
		<link>http://192.168.1.114/WordPress/2017/04/20/php%e5%88%a9%e7%94%a8phpexcel%e6%93%8d%e4%bd%9cexcel%e6%96%87%e4%bb%b6/</link>
		<pubDate>Thu, 20 Apr 2017 00:53:13 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[工具：<strong>PHPExcel</strong>

下面是示例代码，备用。

<code>
/** Error reporting */
error_reporting(E_ALL);

/** Include path **/
ini_set('include_path', ini_get('include_path').';../Classes/');

/** PHPExcel */
include 'PHPExcel.php';

/** PHPExcel_Writer_Excel2007 */
include 'PHPExcel/Writer/Excel2007.php';

// Create new PHPExcel object
echo date('H:i:s') . " Create new PHPExcel object\n";
$objPHPExcel = new PHPExcel();

// Set properties
echo date('H:i:s') . " Set properties\n";
$objPHPExcel->getProperties()->setCreator("Maarten Balliauw");
$objPHPExcel->getProperties()->setLastModifiedBy("Maarten Balliauw");
$objPHPExcel->getProperties()->setTitle("Office 2007 XLSX Test Document");
$objPHPExcel->getProperties()->setSubject("Office 2007 XLSX Test Document");
$objPHPExcel->getProperties()->setDescription("Test document for Office 2007 XLSX, generated using PHP classes.");

// Add some data
echo date('H:i:s') . " Add some data\n";
$objPHPExcel->setActiveSheetIndex(0);
$objPHPExcel->getActiveSheet()->SetCellValue('A1', 'Hello');
$objPHPExcel->getActiveSheet()->SetCellValue('B2', 'world!');
$objPHPExcel->getActiveSheet()->SetCellValue('C1', 'Hello');
$objPHPExcel->getActiveSheet()->SetCellValue('D2', 'world!');

// Rename sheet
echo date('H:i:s') . " Rename sheet\n";
$objPHPExcel->getActiveSheet()->setTitle('Simple');

// Save Excel 2007 file
echo date('H:i:s') . " Write to Excel2007 format\n";
$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
$objWriter->save(str_replace('.php', '.xlsx', <strong>FILE</strong>));

// Echo done
echo date('H:i:s') . " Done writing file.\r\n";

</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date><![CDATA[2017-04-20 08:53:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-20 00:53:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e5%88%a9%e7%94%a8phpexcel%e6%93%8d%e4%bd%9cexcel%e6%96%87%e4%bb%b6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>数据库学习之关键字DISTINCT</title>
		<link>http://192.168.1.114/WordPress/2017/04/21/%e6%95%b0%e6%8d%ae%e5%ba%93%e5%ad%a6%e4%b9%a0%e4%b9%8b%e5%85%b3%e9%94%ae%e5%ad%97distinct/</link>
		<pubDate>Thu, 20 Apr 2017 23:07:25 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[如果一列的值有多个，查询的时间，这些值是会多次返回的。如果不在乎次数，只在有没有。也就是出现过了就不要再出现了，要实现这样的查询就要用到DISTINCT关键字。
其用法如下：

SELECT <strong>DISTINCT</strong> vend_ id FROM Products;

[美]Ben Forta. SQL必知必会（第4版） (图灵程序设计丛书 80) (Kindle Location 325). 人民邮电出版社. Kindle Edition.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date><![CDATA[2017-04-21 07:07:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-20 23:07:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e6%8d%ae%e5%ba%93%e5%ad%a6%e4%b9%a0%e4%b9%8b%e5%85%b3%e9%94%ae%e5%ad%97distinct]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>如何自己编译Logsaw</title>
		<link>http://192.168.1.114/WordPress/2017/04/22/%e5%a6%82%e4%bd%95%e8%87%aa%e5%b7%b1%e7%bc%96%e8%af%91logsaw/</link>
		<pubDate>Sat, 22 Apr 2017 01:59:26 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[Logsaw是一个非常不错的日志分析工具，自已编译一定要严格按照它的编译教程来做。自己花了一些时间，对eclipse不熟悉。

教程的链接：http://logsaw.sourceforge.net/?page_id=260

重点要关注的：eclipse版本选择：the latest version of Eclipse for RCP and RAP Developers.

下载代码，导入工程一般不会有问题。这里就不说了。下面的要注意：
1. navigate into the releng project, and open the workspace.target file in there. In the Target Definition editor, hit the <strong>Set as Target</strong> Platform button in the upper right corner. 打开releng工程的workspace.target文件，然后点击这一页上面的链接Set as Target,然后要等一会儿，应该是去网上下载东西去了。
2. right-click on the releng project and choose Run As > Maven build.... In the following dialog, enter the goals <strong>clean package</strong> and then hit run. Run As会出来几个，一定要找那个可以输入goals的，然后输入clean package然Run就可以了。为毛是clean package啊，好迷惑。
3. 生成的安装在这里：/net.sf.logsaw.site.feature/target/products]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date><![CDATA[2017-04-22 09:59:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-22 01:59:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%a6%82%e4%bd%95%e8%87%aa%e5%b7%b1%e7%bc%96%e8%af%91logsaw]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>C++代码之编译器的坑</title>
		<link>http://192.168.1.114/WordPress/2017/04/22/c%e4%bb%a3%e7%a0%81%e4%b9%8b%e7%bc%96%e8%af%91%e5%99%a8%e7%9a%84%e5%9d%91/</link>
		<pubDate>Sat, 22 Apr 2017 11:51:12 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=239</guid>
		<description></description>
		<content:encoded><![CDATA[C++代码需要在不同的环境里运行，使用的编译器一般来说是不一样的。不一样就会导致对语法的解释不同，一个编译器通过了，但却不能保证在另一个编译器上通过。

今天再次遇到这事，win过了，Linux 却挂了。由于昨天的网络问题没法在Linux 平台上验证。这种时候总是会发生点什么，脸也是够黑的。

一个函数参数需要一个标准库的容器引用，由于一个地方我不需要所以没定义临时变量，直接把容器的构造函数放在参数位置传下去。win 一切正常。Linux却不过。

偶然因素导致不能检查，自动编译Jinkens也没过。影响大家工作。

还是小心的好！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date><![CDATA[2017-04-22 19:51:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-22 11:51:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c%e4%bb%a3%e7%a0%81%e4%b9%8b%e7%bc%96%e8%af%91%e5%99%a8%e7%9a%84%e5%9d%91]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>IOS获取当前时间并转换成可显示字符串的方法</title>
		<link>http://192.168.1.114/WordPress/2017/04/26/ios%e8%8e%b7%e5%8f%96%e5%bd%93%e5%89%8d%e6%97%b6%e9%97%b4%e5%b9%b6%e8%bd%ac%e6%8d%a2%e6%88%90%e5%8f%af%e6%98%be%e7%a4%ba%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%9a%84%e6%96%b9%e6%b3%95/</link>
		<pubDate>Wed, 26 Apr 2017 14:48:54 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=244</guid>
		<description></description>
		<content:encoded><![CDATA[本来很简单的时，在IOS上涉及到的东西还挺多。

<code>

<ul>
<li>(NSString *)getCurrentTimeString {
NSDate *today = [NSDate date];
//   NSInteger interval = [[NSTimeZone systemTimeZone] secondsFromGMTForDate: today];
//   NSDate *localeDate = [today  dateByAddingTimeInterval: interval];

NSDateFormatter <em>formatter = [[NSDateFormatter alloc] init] ;
[formatter setDateStyle:NSDateFormatterMediumStyle];
[formatter setTimeStyle:NSDateFormatterShortStyle];
[formatter setDateFormat:@"YYYY-MM-dd HH:mm:ss"]; //hh与HH的区别:分别表示12小时制,24小时制
//设置时区,这个对于时间的处理有时很重要
//NSTimeZone</em> timeZone = [NSTimeZone timeZoneWithName:@"Asia/Shanghai"];
NSTimeZone* timeZone = [NSTimeZone systemTimeZone];

[formatter setTimeZone:timeZone];

<p>//NSString * date_str = [localeDate description];
NSString * date_str = [formatter stringFromDate:today];
return date_str;
}
</code></p></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date><![CDATA[2017-04-26 22:48:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-26 14:48:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios%e8%8e%b7%e5%8f%96%e5%bd%93%e5%89%8d%e6%97%b6%e9%97%b4%e5%b9%b6%e8%bd%ac%e6%8d%a2%e6%88%90%e5%8f%af%e6%98%be%e7%a4%ba%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%9a%84%e6%96%b9%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>tmux配置：用鼠标切换窗口、调节大小</title>
		<link>http://192.168.1.114/WordPress/2017/04/28/tmux%e9%85%8d%e7%bd%ae%ef%bc%9a%e7%94%a8%e9%bc%a0%e6%a0%87%e5%88%87%e6%8d%a2%e7%aa%97%e5%8f%a3%e3%80%81%e8%b0%83%e8%8a%82%e5%a4%a7%e5%b0%8f/</link>
		<pubDate>Fri, 28 Apr 2017 01:16:30 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[以下内容来自这里：<a href="http://www.cnblogs.com/bamanzi/p/tmux-mouse-tips.html">HERE</a>

其实就这么几行配置:

setw -g mouse-resize-pane on
setw -g mouse-select-pane on
setw -g mouse-select-window on
setw -g mode-mouse on
这几行的作用分别是:

开启用鼠标拖动调节pane的大小（拖动位置是pane之间的分隔线）
开启用鼠标点击pane来激活该pane
开启用鼠标点击来切换活动window（点击位置是状态栏的窗口名称）
开启window/pane里面的鼠标支持（也即可以用鼠标滚轮回滚显示窗口内容，此时还可以用鼠标选取文本）
这几行配置加到 ~/.tmux.conf 中，然后在tmux里面按 C-b : 执行 source ~/.tmux.conf 即可生效 （也可以直接将这几行放在 C-b : 的输入行去执行，每次执行一行，不过 tmux重启后还得再来一遍）。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date><![CDATA[2017-04-28 09:16:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-28 01:16:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tmux%e9%85%8d%e7%bd%ae%ef%bc%9a%e7%94%a8%e9%bc%a0%e6%a0%87%e5%88%87%e6%8d%a2%e7%aa%97%e5%8f%a3%e3%80%81%e8%b0%83%e8%8a%82%e5%a4%a7%e5%b0%8f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>编写Dockerfile的原则</title>
		<link>http://192.168.1.114/WordPress/2017/04/29/%e7%bc%96%e5%86%99dockerfile%e7%9a%84%e5%8e%9f%e5%88%99/</link>
		<pubDate>Sat, 29 Apr 2017 01:48:19 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[一篇文章的总结：原文在<a href="http://cizixs.com/2017/03/28/dockerfile-best-practice" target="_blank">这里</a>

<blockquote>
1. 使用统一的 base 镜像

有些文章讲优化镜像会提倡使用尽量小的基础镜像，比如 busybox 或者 alpine 等。我更推荐使用统一的大家比较熟悉的基础镜像，比如 ubuntu，centos 等，因为基础镜像只需要下载一次可以共享，并不会造成太多的存储空间浪费。它的好处是这些镜像的生态比较完整，方便我们安装软件，除了问题进行调试。

2. 动静分离

经常变化的内容和基本不会变化的内容要分开，把不怎么变化的内容放在下层，创建出来不同基础镜像供上层使用。比如可以创建各种语言的基础镜像，python2.7、python3.4、go1.7、java7等等，这些镜像包含了最基本的语言库，每个组可以在上面继续构建应用级别的镜像。

3. 最小原则：只安装必需的东西

很多人构建镜像的时候，都有一种冲动——把可能用到的东西都打包到镜像中。要遏制这种想法，镜像中应该只包含必需的东西，任何可以有也可以没有的东西都不要放到里面。因为镜像的扩展很容易，而且运行容器的时候也很方便地对其进行修改。这样可以保证镜像尽可能小，构建的时候尽可能快，也保证未来的更快传输、更省网络资源。

4. 一个原则：每个镜像只有一个功能

不要在容器里运行多个不同功能的进程，每个镜像中只安装一个应用的软件包和文件，需要交互的程序通过 pod（kubernetes 提供的特性） 或者容器之间的网络进行交流。这样可以保证模块化，不同的应用可以分开维护和升级，也能减小单个镜像的大小。

5. 使用更少的层

虽然看起来把不同的命令尽量分开来，写在多个命令中容易阅读和理解。但是这样会导致出现太多的镜像层，而不好管理和分析镜像，而且镜像的层是有限的。尽量把相关的内容放到同一个层，使用换行符进行分割，这样可以进一步减小镜像大小，并且方便查看镜像历史。

6. 减少每层的内容

尽管只安装必须的内容，在这个过程中也可能会产生额外的内容或者临时文件，我们要尽量让每层安装的东西保持最小。

比如使用 --no-install-recommends 参数告诉 apt-get 不要安装推荐的软件包
安装完软件包，清楚 /var/lib/apt/list/ 缓存
删除中间文件：比如下载的压缩包
删除临时文件：如果命令产生了临时文件，也要及时删除
7. 不要在 Dockerfile 中修改文件的权限

因为 docker 镜像是分层的，任何修改都会新增一个层，修改文件或者目录权限也是如此。如果修改大文件或者目录的权限，会把这些文件复制一份，这样很容易导致镜像很大。

解决方案也很简单，要么在添加到 Dockerfile 之前就把文件的权限和用户设置好，要么在容器启动脚本（entrypoint）做这些修改。

8. 利用 cache 来加快构建速度

如果 Docker 发现某个层已经存在了，它会直接使用已经存在的层，而不会重新运行一次。如果你连续运行 docker build 多次，会发现第二次运行很快就结束了。

不过从 1.10 版本开始，Content Addressable Storage 的引入导致缓存功能的实效，目前引入了 --cache-from 参数可以手动指定一个镜像来使用它的缓存。

9. 版本控制和自动构建

最好把 Dockerfile 和对应的应用代码一起放到版本控制中，然后能够自动构建镜像。这样的好处是可以追踪各个版本镜像的内容，方便了解不同镜像有什么区别，对于调试和回滚都有好处。

另外，如果运行镜像的参数或者环境变量很多，也要有对应的文档给予说明，并且文档要随着 Dockerfile 变化而更新，这样任何人都能参考着文档很容易地使用镜像，而不是下载了镜像不知道怎么用。
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date><![CDATA[2017-04-29 09:48:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-29 01:48:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bc%96%e5%86%99dockerfile%e7%9a%84%e5%8e%9f%e5%88%99]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>tmux使用：复制与粘贴</title>
		<link>http://192.168.1.114/WordPress/2017/04/30/tmux%e4%bd%bf%e7%94%a8%ef%bc%9a%e5%a4%8d%e5%88%b6%e4%b8%8e%e7%b2%98%e8%b4%b4/</link>
		<pubDate>Sun, 30 Apr 2017 00:36:06 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[拷贝与粘贴

tmux不同的配置，快捷键会存在较大的差异。也就是说，可以定义不同的快捷键来实现复制与粘贴。详细的说明可以在 tmux 的手册中找到。
但对于其默认的设置中这样的：
<strong>使用 “ctrl-b [" 进入拷贝模式，使用空格键（space）开始内容选取，回车键（Enter）进行拷贝，然后使用 "ctrl-b ]” 进行粘贴。</strong>

Good luck.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date><![CDATA[2017-04-30 08:36:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-30 00:36:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tmux%e4%bd%bf%e7%94%a8%ef%bc%9a%e5%a4%8d%e5%88%b6%e4%b8%8e%e7%b2%98%e8%b4%b4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>IOS widget学习入门</title>
		<link>http://192.168.1.114/WordPress/2017/05/02/ios-widget%e5%ad%a6%e4%b9%a0%e5%85%a5%e9%97%a8/</link>
		<pubDate>Tue, 02 May 2017 11:03:47 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[一篇不错的文章，收藏：

<blockquote>
<a href="http://www.jianshu.com/p/1a3bd243f77c" target="_blank">这里</a>
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date><![CDATA[2017-05-02 19:03:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-02 11:03:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios-widget%e5%ad%a6%e4%b9%a0%e5%85%a5%e9%97%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>ssh 通过证书建立信任关系（转）（备用）</title>
		<link>http://192.168.1.114/WordPress/2017/10/17/ssh-%e9%80%9a%e8%bf%87%e8%af%81%e4%b9%a6%e5%bb%ba%e7%ab%8b%e4%bf%a1%e4%bb%bb%e5%85%b3%e7%b3%bb%ef%bc%88%e8%bd%ac%ef%bc%89%ef%bc%88%e5%a4%87%e7%94%a8%ef%bc%89/</link>
		<pubDate>Tue, 17 Oct 2017 06:35:06 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=264</guid>
		<description></description>
		<content:encoded><![CDATA[建立SSH信任
将A主机做为客户端（发起SSH请求 ip:192.168.200.170）
将B主机作为服务器端（接收ssh请求   ip:192.168.200.149）
以上以主动发起SSH登录请求的主机和接收请求的主机进行分类
<1>A主机生成公，私钥证书<br />
[root@buddytj-10 .ssh]# ssh-keygen -t rsa     #rsa算法的证书
Generating public/private rsa key pair. （以下一路回车）
Enter file in which to save the key (/root/.ssh/id_rsa):<br />
/root/.ssh/id_rsa already exists.
Overwrite (y/n)? y                      （因为我的证书已存在，覆盖即可）
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa. （私钥）
Your public key has been saved in /root/.ssh/id_rsa.pub. （公钥）
The key fingerprint is:
c1:26:cc:88:2b:05:dd:c3:6b:1e:78:5d:da:9c:da:8a 
证书就生成了   id_rsa （私钥）|&amp; id_rsa.pub （公钥） 
<2>将A主机生成的公钥传递给B主机 
[root@xyh .ssh]#scp id_rsa.pub  192.168.200.149：/root/.ssh/
在B主机上将A的公钥更名为
[root@xyh .ssh]#mv id_rsa.pub authorized_keys 
<3>至此从A主机远程SSH B主机的工作即告完成]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date><![CDATA[2017-10-17 14:35:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-17 06:35:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ssh-%e9%80%9a%e8%bf%87%e8%af%81%e4%b9%a6%e5%bb%ba%e7%ab%8b%e4%bf%a1%e4%bb%bb%e5%85%b3%e7%b3%bb%ef%bc%88%e8%bd%ac%ef%bc%89%ef%bc%88%e5%a4%87%e7%94%a8%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>IOS设置固定大小的图片</title>
		<link>http://192.168.1.114/WordPress/2018/01/20/ios%e8%ae%be%e7%bd%ae%e5%9b%ba%e5%ae%9a%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%9b%be%e7%89%87/</link>
		<pubDate>Sat, 20 Jan 2018 04:21:19 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[<code> 固定图片大小

<pre><code>UIImage * img = [UIImage imageNamed:@"doorlogo"];

CGSize itemSize = CGSizeMake(60, 60);
UIGraphicsBeginImageContext(itemSize);
CGRect imageRect = CGRectMake(0, 0, itemSize.width, itemSize.height);
[img drawInRect:imageRect];
cell.imageView.image = UIGraphicsGetImageFromCurrentImageContext();
UIGraphicsEndImageContext();
</code></pre>

</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date><![CDATA[2018-01-20 12:21:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-20 04:21:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ios%e8%ae%be%e7%bd%ae%e5%9b%ba%e5%ae%9a%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%9b%be%e7%89%87]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>UIAlertController 项添加图标</title>
		<link>http://192.168.1.114/WordPress/2018/01/20/uialertcontroller-%e9%a1%b9%e6%b7%bb%e5%8a%a0%e5%9b%be%e6%a0%87/</link>
		<pubDate>Sat, 20 Jan 2018 06:41:06 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=270</guid>
		<description></description>
		<content:encoded><![CDATA[<code>
(void)savePreset
{

<pre><code>UIAlertController * alertController = [UIAlertController alertControllerWithTitle:@"Preset to Remoter buttons" message:nil preferredStyle:UIAlertControllerStyleActionSheet];

UIAlertAction * preset1 = [UIAlertAction actionWithTitle:@"Preset1" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
    NSLog(@"send preset 1");
}];

UIAlertAction * preset2 = [UIAlertAction actionWithTitle:@"Preset2" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
    NSLog(@"send preset 2");
}];

UIAlertAction * preset3 = [UIAlertAction actionWithTitle:@"Preset3" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
    NSLog(@"send preset 3");
}];

UIAlertAction * preset4 = [UIAlertAction actionWithTitle:@"Preset4" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
    NSLog(@"send preset 4");
}];

UIAlertAction* defaultAction = [UIAlertAction actionWithTitle:@"Cancel" style:UIAlertActionStyleCancel
                handler:^(UIAlertAction * action) {}];

[alertController addAction:defaultAction];

[preset1 setValue:[[UIImage imageNamed:@"fire"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forKey:@"image"];
[preset2 setValue:[[UIImage imageNamed:@"left"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forKey:@"image"];
[preset3 setValue:[[UIImage imageNamed:@"right"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forKey:@"image"];
[preset4 setValue:[[UIImage imageNamed:@"down"] imageWithRenderingMode:UIImageRenderingModeAutomatic] forKey:@"image"];
[alertController addAction:preset1];
[alertController addAction:preset2];
[alertController addAction:preset3];
[alertController addAction:preset4];
[self presentViewController:alertController animated:YES completion:nil];
</code></pre>

}
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date><![CDATA[2018-01-20 14:41:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-20 06:41:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[uialertcontroller-%e9%a1%b9%e6%b7%bb%e5%8a%a0%e5%9b%be%e6%a0%87]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Java中的移位操作符</title>
		<link>http://192.168.1.114/WordPress/2018/04/29/java%e4%b8%ad%e7%9a%84%e7%a7%bb%e4%bd%8d%e6%93%8d%e4%bd%9c%e7%ac%a6/</link>
		<pubDate>Sun, 29 Apr 2018 03:09:22 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=278</guid>
		<description></description>
		<content:encoded><![CDATA[java中有三种移位运算符

<blockquote>
    <li><<      :     左移运算符，num << 1,相当于num乘以2</li>


    <li>>>      :     右移运算符，num >> 1,相当于num除以2</li>


    <li>>>>    :     无符号右移，忽略符号位，空位都以0补齐</li>
</blockquote>

下面是测试代码
<code>

<pre><code>public static void main(String[] args) {
    int number = 10;
    //原始数二进制
    printInfo(number);
    number = number &lt;&lt; 1;
    //左移一位
    printInfo(number);
    number = number &gt;&gt; 1;
    //右移一位
    printInfo(number);
}

/**
 * 输出一个int的二进制数
 * @param num
 */
private static void printInfo(int num){
    System.out.println(Integer.toBinaryString(num));
}
</code></pre>

</code>

输出结果：

1010
10100
1010]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date><![CDATA[2018-04-29 11:09:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-29 03:09:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e7%a7%bb%e4%bd%8d%e6%93%8d%e4%bd%9c%e7%ac%a6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Android 编译问题：Could not find com.android.tools.lint:lint-gradle:26.1.2.</title>
		<link>http://192.168.1.114/WordPress/2018/04/30/android-%e7%bc%96%e8%af%91%e9%97%ae%e9%a2%98%ef%bc%9acould-not-find-com-android-tools-lintlint-gradle26-1-2/</link>
		<pubDate>Mon, 30 Apr 2018 02:35:31 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=284</guid>
		<description></description>
		<content:encoded><![CDATA[编译时报如下的错误：

<blockquote>
FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':app:lintVitalRelease'.
> Could not resolve all files for configuration ':app:lintClassPath'.
   > Could not find com.android.tools.lint:lint-gradle:26.1.2.
     Searched in the following locations:
         file:/C:/Users/wwq/AppData/Local/Android/sdk/extras/m2repository/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.pom
         file:/C:/Users/wwq/AppData/Local/Android/sdk/extras/m2repository/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.jar
         file:/C:/Users/wwq/AppData/Local/Android/sdk/extras/google/m2repository/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.pom
         file:/C:/Users/wwq/AppData/Local/Android/sdk/extras/google/m2repository/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.jar
         file:/C:/Users/wwq/AppData/Local/Android/sdk/extras/android/m2repository/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.pom
         file:/C:/Users/wwq/AppData/Local/Android/sdk/extras/android/m2repository/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.jar
         https://jcenter.bintray.com/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.pom
         https://jcenter.bintray.com/com/android/tools/lint/lint-gradle/26.1.2/lint-gradle-26.1.2.jar
     Required by:
         project :app
</blockquote>

解决方法：
检查根 build.gradle 文件。

<blockquote>
allprojects {
    repositories {
        jcenter()
//        mavenCentral()
        google() //<strong>要加这行</strong>
//        maven { url 'https://jitpack.io' }
    }
}
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date><![CDATA[2018-04-30 10:35:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-30 02:35:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-%e7%bc%96%e8%af%91%e9%97%ae%e9%a2%98%ef%bc%9acould-not-find-com-android-tools-lintlint-gradle26-1-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f6f305a1ffee56236ba57c4f67b0cf97]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d0d5a35a6d13135e5cabad2374108138]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_92d514cc27c2ff897e3f5ab1d0308e39]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_06f7533ab579114238cb8ddcdaa0d982]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Thinkpad P50 更新后不能唤醒的问题</title>
		<link>http://192.168.1.114/WordPress/2018/05/12/thinkpad-p50-%e6%9b%b4%e6%96%b0%e5%90%8e%e4%b8%8d%e8%83%bd%e5%94%a4%e9%86%92%e7%9a%84%e9%97%ae%e9%a2%98/</link>
		<pubDate>Sat, 12 May 2018 05:38:00 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=287</guid>
		<description></description>
		<content:encoded><![CDATA[显卡驱动问题：在Bios里面把集显禁用，就不会有这个问题。

但是按下面的这个链接处理，也能解决问题。

https://jingyan.baidu.com/article/c275f6ba308652e33d7567f8.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>287</wp:post_id>
		<wp:post_date><![CDATA[2018-05-12 13:38:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-12 05:38:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[thinkpad-p50-%e6%9b%b4%e6%96%b0%e5%90%8e%e4%b8%8d%e8%83%bd%e5%94%a4%e9%86%92%e7%9a%84%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f49d2887010651ad4994b9d904022780]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8e76200d1530122e98acca640c61759b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Redmine 联接 https 地址的svn服务器</title>
		<link>http://192.168.1.114/WordPress/2018/06/23/redmine-%e8%81%94%e6%8e%a5-https-%e5%9c%b0%e5%9d%80%e7%9a%84svn%e6%9c%8d%e5%8a%a1%e5%99%a8/</link>
		<pubDate>Sat, 23 Jun 2018 04:22:45 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=295</guid>
		<description></description>
		<content:encoded><![CDATA[https://blog.csdn.net/taonull/article/details/39249729

1.打开redmine控制台；
2.运行svn list --xml https://svn地址；
3.提示证书时选择p（永久保存ssl凭证）；
4.运行成功后，找到subversion_adapter.rb(redmine文件夹\apps\redmine\htdocs\lib\redmine\scm\adapters)，找到
def credentials_string

<code>
          str &lt;&lt; " --username #{shell_quote(@login)}" unless @login.blank?
          str &lt;&lt; " --password #{shell_quote(@password)}" unless @login.blank? || @password.blank?
          str &lt;&lt; " --no-auth-cache --non-interactive"
</code>
修改为：
<code>
str &lt;&lt; " --username #{shell_quote(@login)}" unless @login.blank?
          str &lt;&lt; " --password #{shell_quote(@password)}" unless @login.blank? || @password.blank?
          str &lt;&lt; " --trust-server-cert --no-auth-cache --non-interactive  --config-dir \"c:/Users/Administrator/AppData/Roaming/Subversion\""
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date><![CDATA[2018-06-23 12:22:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-23 04:22:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[redmine-%e8%81%94%e6%8e%a5-https-%e5%9c%b0%e5%9d%80%e7%9a%84svn%e6%9c%8d%e5%8a%a1%e5%99%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ff33d0e51b262fbefe7177e3599f794e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_588bac55cad8be9abaa4ff616e667cfc]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Windows远程桌面连接Linux</title>
		<link>http://192.168.1.114/WordPress/2018/07/11/windows%e8%bf%9c%e7%a8%8b%e6%a1%8c%e9%9d%a2%e8%bf%9e%e6%8e%a5linux/</link>
		<pubDate>Wed, 11 Jul 2018 10:58:04 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=298</guid>
		<description></description>
		<content:encoded><![CDATA[Windows连接Linux
在Linux装下xrdp软件
<code>1、安装xrdp  sudo apt-get install xrdp 
2、配置xrdp /etc/xrdp/xrdp.ini 复制一个配置将其中的port 配置成5900及名称改下， service xrdp restart 
3、安装vino  sudo apt-get install vino
4、vino-preference 将第1 个开启
5、gsettings set org.gnome.Vino require-encryption false
6、/usr/lib/vino/vino-server/</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>298</wp:post_id>
		<wp:post_date><![CDATA[2018-07-11 18:58:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-11 10:58:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[windows%e8%bf%9c%e7%a8%8b%e6%a1%8c%e9%9d%a2%e8%bf%9e%e6%8e%a5linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>QWizard不能显示完成与取消按钮的问题</title>
		<link>http://192.168.1.114/WordPress/2018/08/10/qwizard%e4%b8%8d%e8%83%bd%e6%98%be%e7%a4%ba%e5%ae%8c%e6%88%90%e4%b8%8e%e5%8f%96%e6%b6%88%e6%8c%89%e9%92%ae%e7%9a%84%e9%97%ae%e9%a2%98/</link>
		<pubDate>Fri, 10 Aug 2018 10:48:49 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=301</guid>
		<description></description>
		<content:encoded><![CDATA[我使用的是Qt5.4.2, 遇到这个问题。对话框显示出来后，用鼠标改变一下大小就能显示出来。看起来像Qt的bug。

经反复尝试，发现修改QWizard的属性styleSheet为ClassicStyle就可以解决这个问题。

具体原因不清楚。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>301</wp:post_id>
		<wp:post_date><![CDATA[2018-08-10 18:48:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-10 10:48:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[qwizard%e4%b8%8d%e8%83%bd%e6%98%be%e7%a4%ba%e5%ae%8c%e6%88%90%e4%b8%8e%e5%8f%96%e6%b6%88%e6%8c%89%e9%92%ae%e7%9a%84%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>加快QWebview中执行Javascript的速度</title>
		<link>http://192.168.1.114/WordPress/2018/08/13/%e5%8a%a0%e5%bf%abqwebview%e4%b8%ad%e6%89%a7%e8%a1%8cjavascript%e7%9a%84%e9%80%9f%e5%ba%a6/</link>
		<pubDate>Mon, 13 Aug 2018 11:37:46 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[The issue is that Qt is evaluating the return value of the last statement in Javascript and converting it to a QVariant. It became time consuming because jQuery was returning the jQuery object, which was being evaluated in its entirety by Qt - and recursively at that. This also consumed RAM too.

It wasn't console.log that was fixing the issue, it was the "null" value it returned. I tested, and stapling "null" at the end of the script also worked. Below is the updated code.

myWebElement->evaluateJavaScript( myScript + "; null" );

如果发现执行速度超级慢，按上面的方法处理。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date><![CDATA[2018-08-13 19:37:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-13 11:37:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%8a%a0%e5%bf%abqwebview%e4%b8%ad%e6%89%a7%e8%a1%8cjavascript%e7%9a%84%e9%80%9f%e5%ba%a6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>解决家里面打印机暂停的问题</title>
		<link>http://192.168.1.114/WordPress/2018/08/31/%e8%a7%a3%e5%86%b3%e5%ae%b6%e9%87%8c%e9%9d%a2%e6%89%93%e5%8d%b0%e6%9c%ba%e6%9a%82%e5%81%9c%e7%9a%84%e9%97%ae%e9%a2%98/</link>
		<pubDate>Fri, 31 Aug 2018 13:58:15 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[按下面图片所示的界面，去重新开始打印机就可以。
<a href="http://wanqiang.wang/wp-content/uploads/2018/08/printer_paused.png"><img src="http://wanqiang.wang/wp-content/uploads/2018/08/printer_paused-300x172.png" alt="" width="300" height="172" class="alignnone size-medium wp-image-309" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date><![CDATA[2018-08-31 21:58:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-31 13:58:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%a7%a3%e5%86%b3%e5%ae%b6%e9%87%8c%e9%9d%a2%e6%89%93%e5%8d%b0%e6%9c%ba%e6%9a%82%e5%81%9c%e7%9a%84%e9%97%ae%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>snap 方式安装的 nextcloud 设置默认端口</title>
		<link>http://192.168.1.114/WordPress/2019/02/21/snap-%e6%96%b9%e5%bc%8f%e5%ae%89%e8%a3%85%e7%9a%84-nextcloud-%e8%ae%be%e7%bd%ae%e9%bb%98%e8%ae%a4%e7%ab%af%e5%8f%a3/</link>
		<pubDate>Thu, 21 Feb 2019 06:18:44 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=316</guid>
		<description></description>
		<content:encoded><![CDATA[比如改成81端口，使用命令sudo snap set nextcloud ports.http=81]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date><![CDATA[2019-02-21 14:18:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-21 06:18:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[snap-%e6%96%b9%e5%bc%8f%e5%ae%89%e8%a3%85%e7%9a%84-nextcloud-%e8%ae%be%e7%bd%ae%e9%bb%98%e8%ae%a4%e7%ab%af%e5%8f%a3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Linux打印机管理</title>
		<link>http://192.168.1.114/WordPress/2019/04/08/linux%e6%89%93%e5%8d%b0%e6%9c%ba%e7%ae%a1%e7%90%86/</link>
		<pubDate>Mon, 08 Apr 2019 07:03:40 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=321</guid>
		<description></description>
		<content:encoded><![CDATA[lpq -a   //显示出目前所有打印机的工作队列情况
lprm  11  //取消11号打印机作业
lpq -l -P Hp2015  //用详细方式显示打印机Hp2015作业
lpstat -t  ：列出目前的“打印系统”状态，不只包括打印机而已

暂停或者开始打印机：
重新开始打印机
sudo cupsenable HP_LaserJet_1020
禁用打印机
sudo cupsdisable HP_LaserJet_1020]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>321</wp:post_id>
		<wp:post_date><![CDATA[2019-04-08 15:03:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-08 07:03:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux%e6%89%93%e5%8d%b0%e6%9c%ba%e7%ae%a1%e7%90%86]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>python2 python3共存</title>
		<link>http://192.168.1.114/WordPress/2019/05/22/python2-python3%e5%85%b1%e5%ad%98/</link>
		<pubDate>Wed, 22 May 2019 01:28:52 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=334</guid>
		<description></description>
		<content:encoded><![CDATA[官方的解决方案：
https://docs.python.org/3/installing/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date><![CDATA[2019-05-22 09:28:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-22 01:28:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python2-python3%e5%85%b1%e5%ad%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d92d85f26bd2507c49c38cb09f868534]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b4b0576bda0a8e629f2e8a34e92bd605]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>nextcloud 移动数据位置</title>
		<link>http://192.168.1.114/WordPress/2019/06/01/nextcloud-%e7%a7%bb%e5%8a%a8%e6%95%b0%e6%8d%ae%e4%bd%8d%e7%bd%ae/</link>
		<pubDate>Sat, 01 Jun 2019 12:33:44 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=338</guid>
		<description></description>
		<content:encoded><![CDATA[下面是官方说明：
https://github.com/nextcloud/nextcloud-snap/wiki/Change-data-directory-to-use-another-disk-partition

Removable media
Also note that the interface providing the ability to access removable media is not automatically connected upon install, so if you'd like to use external storage (or otherwise use a device in /media for data), you need to give the snap permission to access removable media by connecting that interface:

$ sudo snap connect nextcloud:removable-media

可以使用 mount --bind 命令挂载已有目录。要实现自动挂载，可以写在 /etc/fstab 里面。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date><![CDATA[2019-06-01 20:33:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-01 12:33:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nextcloud-%e7%a7%bb%e5%8a%a8%e6%95%b0%e6%8d%ae%e4%bd%8d%e7%bd%ae]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5aa8a254bcf2dc4a4fcee86349f655ee]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2fa90fbc21df7b29864b72e6b03952cd]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>如何看mdstat文件</title>
		<link>http://192.168.1.114/WordPress/2019/06/02/%e5%a6%82%e4%bd%95%e7%9c%8bmdstat%e6%96%87%e4%bb%b6/</link>
		<pubDate>Sat, 01 Jun 2019 22:34:29 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=343</guid>
		<description></description>
		<content:encoded><![CDATA[指导文件：
https://raid.wiki.kernel.org/index.php/Mdstat]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date><![CDATA[2019-06-02 06:34:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-01 22:34:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%a6%82%e4%bd%95%e7%9c%8bmdstat%e6%96%87%e4%bb%b6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_22e64cc9514254e8e5ead9f9bb84d7c3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_18f7e849be1eb03b9a79d15fe154be64]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>树莓派的Web ssh</title>
		<link>http://192.168.1.114/WordPress/2019/06/03/%e6%a0%91%e8%8e%93%e6%b4%be%e7%9a%84web-ssh/</link>
		<pubDate>Mon, 03 Jun 2019 07:26:13 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=345</guid>
		<description></description>
		<content:encoded><![CDATA[https://www.instructables.com/id/Raspberry-Pi-online-SSH-easy-way/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>345</wp:post_id>
		<wp:post_date><![CDATA[2019-06-03 15:26:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-03 07:26:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%a0%91%e8%8e%93%e6%b4%be%e7%9a%84web-ssh]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b2a26d6d803bcf9b47e2d29f25370f63]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f74bb9c895fe1cbf79b6cc9b453e472f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>树莓派docker运行报错</title>
		<link>http://192.168.1.114/WordPress/2019/06/07/%e6%a0%91%e8%8e%93%e6%b4%bedocker%e8%bf%90%e8%a1%8c%e6%8a%a5%e9%94%99/</link>
		<pubDate>Fri, 07 Jun 2019 00:54:02 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=347</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>解决方案</h1>

This is because the docker service is not automatically started after an install.

You can start the docker service in Ubuntu and its derivatives (looking at you Linux Mint) by typing:

sudo service docker start

To check that docker started, this file should exist:

ls -la /var/run/docker.sock]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>347</wp:post_id>
		<wp:post_date><![CDATA[2019-06-07 08:54:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-07 00:54:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%a0%91%e8%8e%93%e6%b4%bedocker%e8%bf%90%e8%a1%8c%e6%8a%a5%e9%94%99]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Linux Lab</title>
		<link>http://192.168.1.114/WordPress/2019/06/14/linux-lab/</link>
		<pubDate>Fri, 14 Jun 2019 01:03:54 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=350</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>linux 内核学习资源，暂时收集。</h2>

还没有详细研究。
http://tinylab.org/linux-lab/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date><![CDATA[2019-06-14 09:03:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-14 01:03:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-lab]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b9075b51e93d678bb6d0303b8bf6a997]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_6fa4ea0fb0e0e5f41ae4ffa2135bcf3d]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>qnap国外商店</title>
		<link>http://192.168.1.114/WordPress/2019/06/21/qnap%e5%9b%bd%e5%a4%96%e5%95%86%e5%ba%97/</link>
		<pubDate>Fri, 21 Jun 2019 04:25:36 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=354</guid>
		<description></description>
		<content:encoded><![CDATA[https://qnapclub.eu/index.php/en]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>354</wp:post_id>
		<wp:post_date><![CDATA[2019-06-21 12:25:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-21 04:25:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[qnap%e5%9b%bd%e5%a4%96%e5%95%86%e5%ba%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_85deffb48b8d0449e4cf2bdea6fd8540]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_008708af2dc26df5b338524b98f3e478]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>xslt keep-together.within-page 在Fop中的形为</title>
		<link>http://192.168.1.114/WordPress/2019/07/16/xslt-keep-together-within-page-%e5%9c%a8fop%e4%b8%ad%e7%9a%84%e5%bd%a2%e4%b8%ba/</link>
		<pubDate>Tue, 16 Jul 2019 00:59:28 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=356</guid>
		<description></description>
		<content:encoded><![CDATA[keep-together.within-page

<ol>
<li>auto是默认形为, 写不写都是一样的。</li>
<li>always是强制在一页中。如果当前限制的内容超过一页时，会从页面下方溢出。</li>
<li>指定一个数字。测试 1 的形为是这样的：会换页将当前内容保持在一页中。但如果当前内容超过一页时，也会将多余的内容显示到下一页中，保证不会将内容溢出到纸的外面。</li>
</ol>

https://www.w3.org/TR/xsl11/#keep-together]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>356</wp:post_id>
		<wp:post_date><![CDATA[2019-07-16 08:59:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-16 00:59:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xslt-keep-together-within-page-%e5%9c%a8fop%e4%b8%ad%e7%9a%84%e5%bd%a2%e4%b8%ba]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_1d151f98b4815cfdc5ca45d010fb75f5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_cf3a7df767abdbd8d73b4c2c3bba3206]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>xslt调试技巧</title>
		<link>http://192.168.1.114/WordPress/2019/07/09/xslt%e8%b0%83%e8%af%95%e6%8a%80%e5%b7%a7/</link>
		<pubDate>Tue, 09 Jul 2019 11:21:47 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[https://www.ibm.com/developerworks/cn/xml/x-tipxslmsg.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date><![CDATA[2019-07-09 19:21:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-09 11:21:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xslt%e8%b0%83%e8%af%95%e6%8a%80%e5%b7%a7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_93eb989c29653b1144f1e54e8bd4509d]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b15f40e22f1159a2ba5ebca39701af18]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>QNAP安装transmission</title>
		<link>http://192.168.1.114/WordPress/2019/07/16/qnap%e5%ae%89%e8%a3%85transmission/</link>
		<pubDate>Tue, 16 Jul 2019 14:00:06 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://wanqiang.wang/?p=366</guid>
		<description></description>
		<content:encoded><![CDATA[docker create \
--name=transmission \
-e PUID=1000 \
-e PGID=1000 \
-e TZ=Europe/London \
-e TRANSMISSION_WEB_HOME=/combustion-release/ <code>#optional</code> \
-p 9091:9091 \
-p 51413:51413 \
-p 51413:51413/udp \
-v /share/homes/docker/trans/data:/config \
-v /share/homes/docker/trans/downloads:/downloads \
-v /share/homes/docker/trans/watch:/watch \
--restart unless-stopped \
linuxserver/transmission]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>366</wp:post_id>
		<wp:post_date><![CDATA[2019-07-16 22:00:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-16 14:00:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[qnap%e5%ae%89%e8%a3%85transmission]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title>Thinkpad 小红点恢复Win10中键滚动功能</title>
		<link>http://192.168.1.114/WordPress/2019/12/21/thinkpad-%e5%b0%8f%e7%ba%a2%e7%82%b9%e6%81%a2%e5%a4%8dwin10%e4%b8%ad%e9%94%ae%e6%bb%9a%e5%8a%a8%e5%8a%9f%e8%83%bd/</link>
		<pubDate>Sat, 21 Dec 2019 13:41:02 +0000</pubDate>
		<dc:creator><![CDATA[wwq]]></dc:creator>
		<guid isPermaLink="false">http://192.168.1.114/WordPress/?p=385</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading {"level":1} -->
<h1 id="CQHzT">问题</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在Windows 10下面，按住中键，拔动小红点，页面滚动的同时，光标也会一起跑。控制面板中也找不到设置的地方。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1 id="F5UoG">解决方案</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>需要修改注册表：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在HKEY_CURRENT_USER\Software\Synaptics\SynTPEnh\UltraNavPS2中，把TrackPointModeFunction的值修改一下即可。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>原为："TrackPointModeFunction"=dword:00000011</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>改为："TrackPointModeFunction"=dword:00000010</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>这样就跟以前使用完全相同了，中键点击是小手或指针，滚动是鼠标中键滚动的图标，一切完美。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>385</wp:post_id>
		<wp:post_date><![CDATA[2019-12-21 21:41:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-12-21 13:41:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[thinkpad-%e5%b0%8f%e7%ba%a2%e7%82%b9%e6%81%a2%e5%a4%8dwin10%e4%b8%ad%e9%94%ae%e6%bb%9a%e5%8a%a8%e5%8a%9f%e8%83%bd]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						</item>
				</channel>
</rss>
	