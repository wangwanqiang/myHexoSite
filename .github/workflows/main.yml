name: Deploy

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to deploy blog.
    steps:
        
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true # Checkout private submodules(themes or something else).
    
    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
    - name: Cache node modules
      uses: actions/cache@v3
      id: cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install hexo-cli
      #if: steps.cache.outputs.cache-hit != 'true'
      run: npm install -g hexo-cli
      
    - name: Install npm nodejs
      uses: actions/setup-node@v3
      with:
        node-version: '20.19.0'
     #-run: npm install
      
     #run: npm install
      
    - name: show hexo version
      run: |
        npm update
        hexo version
        npm outdated
        npm fund
        
    - name: run generate
      run: |
        hexo clean
        hexo generate
        
    # 配置SSH以使用Deploy keys
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        # 从Repository secrets获取DEPLOY_KEY并配置为SSH密钥
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        # 配置known_hosts避免主机验证问题
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        # 调试信息：检查密钥文件权限和内容长度
        ls -la ~/.ssh
        echo "Key length: $(cat ~/.ssh/id_rsa | wc -c) characters"
        # 调试SSH连接
        ssh -vT git@github.com || true
        
    # Deploy hexo blog website using Deploy keys
    - name: Deploy
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        cd ./public
        git init
        git add -A
        git commit -m "Update docs by GitHub Actions"
        # 添加远程仓库
        git remote add origin git@github.com:wangwanqiang/wangwanqiang.github.com.git
        # 显示远程仓库配置
        git remote -v
        # 配置Git使用SSH密钥
        git config --global core.sshCommand "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -v"
        # 显示Git配置
        git config --list
        # 测试SSH连接和仓库访问权限
        ssh -vT git@github.com "echo 'SSH connection successful'" || true
        # 尝试列出远程仓库引用（这是一个只读操作，测试权限）
        git ls-remote origin || true
        # 再次确认SSH命令配置
        echo "GIT_SSH_COMMAND: ssh -i ~/.ssh/id_rsa -v"
        # 使用详细模式推送
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -v" git push --force origin master
